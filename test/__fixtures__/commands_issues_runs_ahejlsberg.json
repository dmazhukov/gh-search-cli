{
	"total_count": 1093,
	"incomplete_results": false,
	"items": [
		{
			"url": "https://api.github.com/repos/DefinitelyTyped/DefinitelyTyped/issues/38555",
			"repository_url": "https://api.github.com/repos/DefinitelyTyped/DefinitelyTyped",
			"labels_url": "https://api.github.com/repos/DefinitelyTyped/DefinitelyTyped/issues/38555/labels{/name}",
			"comments_url": "https://api.github.com/repos/DefinitelyTyped/DefinitelyTyped/issues/38555/comments",
			"events_url": "https://api.github.com/repos/DefinitelyTyped/DefinitelyTyped/issues/38555/events",
			"html_url": "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/38555",
			"id": 497382374,
			"node_id": "MDExOlB1bGxSZXF1ZXN0MzIwNTI1Nzc2",
			"number": 38555,
			"title": "Prepare for TS #33050",
			"user": {
				"login": "ahejlsberg",
				"id": 4226954,
				"node_id": "MDQ6VXNlcjQyMjY5NTQ=",
				"avatar_url": "https://avatars1.githubusercontent.com/u/4226954?v=4",
				"gravatar_id": "",
				"url": "https://api.github.com/users/ahejlsberg",
				"html_url": "https://github.com/ahejlsberg",
				"followers_url": "https://api.github.com/users/ahejlsberg/followers",
				"following_url": "https://api.github.com/users/ahejlsberg/following{/other_user}",
				"gists_url": "https://api.github.com/users/ahejlsberg/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/ahejlsberg/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/ahejlsberg/subscriptions",
				"organizations_url": "https://api.github.com/users/ahejlsberg/orgs",
				"repos_url": "https://api.github.com/users/ahejlsberg/repos",
				"events_url": "https://api.github.com/users/ahejlsberg/events{/privacy}",
				"received_events_url": "https://api.github.com/users/ahejlsberg/received_events",
				"type": "User",
				"site_admin": false
			},
			"labels": [
				{
					"id": 644095236,
					"node_id": "MDU6TGFiZWw2NDQwOTUyMzY=",
					"url": "https://api.github.com/repos/DefinitelyTyped/DefinitelyTyped/labels/Merge:Express",
					"name": "Merge:Express",
					"color": "00AA00",
					"default": false
				},
				{
					"id": 905334095,
					"node_id": "MDU6TGFiZWw5MDUzMzQwOTU=",
					"url": "https://api.github.com/repos/DefinitelyTyped/DefinitelyTyped/labels/Owner%20Approved",
					"name": "Owner Approved",
					"color": "0e8a16",
					"default": false
				},
				{
					"id": 684321576,
					"node_id": "MDU6TGFiZWw2ODQzMjE1NzY=",
					"url": "https://api.github.com/repos/DefinitelyTyped/DefinitelyTyped/labels/Popular%20package",
					"name": "Popular package",
					"color": "fbca04",
					"default": false
				}
			],
			"state": "open",
			"locked": false,
			"assignee": null,
			"assignees": [],
			"milestone": null,
			"comments": 5,
			"created_at": "2019-09-23T23:52:18Z",
			"updated_at": "2019-09-25T12:26:09Z",
			"closed_at": null,
			"author_association": "COLLABORATOR",
			"pull_request": {
				"url": "https://api.github.com/repos/DefinitelyTyped/DefinitelyTyped/pulls/38555",
				"html_url": "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/38555",
				"diff_url": "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/38555.diff",
				"patch_url": "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/38555.patch"
			},
			"body": "This PR prepares a number of tests for https://github.com/microsoft/TypeScript/pull/33050 by changing `$ExpectType` comments to accept multiple choices (separated by `||`). We need this because TS 3.7 preserves type aliases in a number of cases where it previously didn't.",
			"score": 60.483208
		},
		{
			"url": "https://api.github.com/repos/angular/Angular2.design/issues/3",
			"repository_url": "https://api.github.com/repos/angular/Angular2.design",
			"labels_url": "https://api.github.com/repos/angular/Angular2.design/issues/3/labels{/name}",
			"comments_url": "https://api.github.com/repos/angular/Angular2.design/issues/3/comments",
			"events_url": "https://api.github.com/repos/angular/Angular2.design/issues/3/events",
			"html_url": "https://github.com/angular/Angular2.design/issues/3",
			"id": 53285937,
			"node_id": "MDU6SXNzdWU1MzI4NTkzNw==",
			"number": 3,
			"title": "AtScript is superset of TypeScript",
			"user": {
				"login": "dawud-tan",
				"id": 3692062,
				"node_id": "MDQ6VXNlcjM2OTIwNjI=",
				"avatar_url": "https://avatars2.githubusercontent.com/u/3692062?v=4",
				"gravatar_id": "",
				"url": "https://api.github.com/users/dawud-tan",
				"html_url": "https://github.com/dawud-tan",
				"followers_url": "https://api.github.com/users/dawud-tan/followers",
				"following_url": "https://api.github.com/users/dawud-tan/following{/other_user}",
				"gists_url": "https://api.github.com/users/dawud-tan/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/dawud-tan/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/dawud-tan/subscriptions",
				"organizations_url": "https://api.github.com/users/dawud-tan/orgs",
				"repos_url": "https://api.github.com/users/dawud-tan/repos",
				"events_url": "https://api.github.com/users/dawud-tan/events{/privacy}",
				"received_events_url": "https://api.github.com/users/dawud-tan/received_events",
				"type": "User",
				"site_admin": false
			},
			"labels": [],
			"state": "open",
			"locked": true,
			"assignee": null,
			"assignees": [],
			"milestone": null,
			"comments": 0,
			"created_at": "2015-01-02T23:35:32Z",
			"updated_at": "2015-01-02T23:35:32Z",
			"closed_at": null,
			"author_association": "NONE",
			"body": "why @mhevery don't just fork @ahejlsberg 's TypeScript project\n",
			"score": 47.346336
		},
		{
			"url": "https://api.github.com/repos/domenic/proposal-blocks/issues/15",
			"repository_url": "https://api.github.com/repos/domenic/proposal-blocks",
			"labels_url": "https://api.github.com/repos/domenic/proposal-blocks/issues/15/labels{/name}",
			"comments_url": "https://api.github.com/repos/domenic/proposal-blocks/issues/15/comments",
			"events_url": "https://api.github.com/repos/domenic/proposal-blocks/issues/15/events",
			"html_url": "https://github.com/domenic/proposal-blocks/issues/15",
			"id": 326042151,
			"node_id": "MDU6SXNzdWUzMjYwNDIxNTE=",
			"number": 15,
			"title": "Variable capture and TypeScript / C#",
			"user": {
				"login": "benjamingr",
				"id": 1315533,
				"node_id": "MDQ6VXNlcjEzMTU1MzM=",
				"avatar_url": "https://avatars2.githubusercontent.com/u/1315533?v=4",
				"gravatar_id": "",
				"url": "https://api.github.com/users/benjamingr",
				"html_url": "https://github.com/benjamingr",
				"followers_url": "https://api.github.com/users/benjamingr/followers",
				"following_url": "https://api.github.com/users/benjamingr/following{/other_user}",
				"gists_url": "https://api.github.com/users/benjamingr/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/benjamingr/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/benjamingr/subscriptions",
				"organizations_url": "https://api.github.com/users/benjamingr/orgs",
				"repos_url": "https://api.github.com/users/benjamingr/repos",
				"events_url": "https://api.github.com/users/benjamingr/events{/privacy}",
				"received_events_url": "https://api.github.com/users/benjamingr/received_events",
				"type": "User",
				"site_admin": false
			},
			"labels": [],
			"state": "open",
			"locked": false,
			"assignee": null,
			"assignees": [],
			"milestone": null,
			"comments": 0,
			"created_at": "2018-05-24T09:40:53Z",
			"updated_at": "2018-05-24T09:41:06Z",
			"closed_at": null,
			"author_association": "NONE",
			"body": "> One advantage other languages have over our bl√∂ck syntax so far is that they make it very easy to capture variables in the closure passed to the thread/task-factories.\r\n\r\nBlock syntax can be really useful when coupled with an AST facility in order to implement really cool stuff (like C#'s LINQ).\r\n\r\nIIRC there was an interesting discussion about the possibility of implementing this with capture for TypeScript that was shut down for performance reasons. I think it would be really cool if the people involved would weigh in - I think I recall @ahejlsberg \r\n\r\nI tried to look for something summarized but couldn't find any.",
			"score": 37.258755
		},
		{
			"url": "https://api.github.com/repos/microsoft/TypeScript/issues/32905",
			"repository_url": "https://api.github.com/repos/microsoft/TypeScript",
			"labels_url": "https://api.github.com/repos/microsoft/TypeScript/issues/32905/labels{/name}",
			"comments_url": "https://api.github.com/repos/microsoft/TypeScript/issues/32905/comments",
			"events_url": "https://api.github.com/repos/microsoft/TypeScript/issues/32905/events",
			"html_url": "https://github.com/microsoft/TypeScript/issues/32905",
			"id": 480937478,
			"node_id": "MDU6SXNzdWU0ODA5Mzc0Nzg=",
			"number": 32905,
			"title": "Exhaustive switch return type does not work when wrapped in a try-catch.",
			"user": {
				"login": "trusktr",
				"id": 297678,
				"node_id": "MDQ6VXNlcjI5NzY3OA==",
				"avatar_url": "https://avatars3.githubusercontent.com/u/297678?v=4",
				"gravatar_id": "",
				"url": "https://api.github.com/users/trusktr",
				"html_url": "https://github.com/trusktr",
				"followers_url": "https://api.github.com/users/trusktr/followers",
				"following_url": "https://api.github.com/users/trusktr/following{/other_user}",
				"gists_url": "https://api.github.com/users/trusktr/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/trusktr/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/trusktr/subscriptions",
				"organizations_url": "https://api.github.com/users/trusktr/orgs",
				"repos_url": "https://api.github.com/users/trusktr/repos",
				"events_url": "https://api.github.com/users/trusktr/events{/privacy}",
				"received_events_url": "https://api.github.com/users/trusktr/received_events",
				"type": "User",
				"site_admin": false
			},
			"labels": [
				{
					"id": 1023321108,
					"node_id": "MDU6TGFiZWwxMDIzMzIxMTA4",
					"url": "https://api.github.com/repos/microsoft/TypeScript/labels/Experience%20Enhancement",
					"name": "Experience Enhancement",
					"color": "556677",
					"default": false
				},
				{
					"id": 114001888,
					"node_id": "MDU6TGFiZWwxMTQwMDE4ODg=",
					"url": "https://api.github.com/repos/microsoft/TypeScript/labels/Fixed",
					"name": "Fixed",
					"color": "bfe5bf",
					"default": false
				},
				{
					"id": 113971155,
					"node_id": "MDU6TGFiZWwxMTM5NzExNTU=",
					"url": "https://api.github.com/repos/microsoft/TypeScript/labels/Suggestion",
					"name": "Suggestion",
					"color": "006b75",
					"default": false
				}
			],
			"state": "open",
			"locked": false,
			"assignee": null,
			"assignees": [],
			"milestone": {
				"url": "https://api.github.com/repos/microsoft/TypeScript/milestones/29",
				"html_url": "https://github.com/microsoft/TypeScript/milestone/29",
				"labels_url": "https://api.github.com/repos/microsoft/TypeScript/milestones/29/labels",
				"id": 1973940,
				"node_id": "MDk6TWlsZXN0b25lMTk3Mzk0MA==",
				"number": 29,
				"title": "Backlog",
				"description": "",
				"creator": {
					"login": "mhegazy",
					"id": 8000722,
					"node_id": "MDQ6VXNlcjgwMDA3MjI=",
					"avatar_url": "https://avatars3.githubusercontent.com/u/8000722?v=4",
					"gravatar_id": "",
					"url": "https://api.github.com/users/mhegazy",
					"html_url": "https://github.com/mhegazy",
					"followers_url": "https://api.github.com/users/mhegazy/followers",
					"following_url": "https://api.github.com/users/mhegazy/following{/other_user}",
					"gists_url": "https://api.github.com/users/mhegazy/gists{/gist_id}",
					"starred_url": "https://api.github.com/users/mhegazy/starred{/owner}{/repo}",
					"subscriptions_url": "https://api.github.com/users/mhegazy/subscriptions",
					"organizations_url": "https://api.github.com/users/mhegazy/orgs",
					"repos_url": "https://api.github.com/users/mhegazy/repos",
					"events_url": "https://api.github.com/users/mhegazy/events{/privacy}",
					"received_events_url": "https://api.github.com/users/mhegazy/received_events",
					"type": "User",
					"site_admin": false
				},
				"open_issues": 1482,
				"closed_issues": 189,
				"state": "open",
				"created_at": "2016-08-31T00:21:08Z",
				"updated_at": "2019-09-23T21:28:32Z",
				"due_on": null,
				"closed_at": null
			},
			"comments": 3,
			"created_at": "2019-08-14T23:57:15Z",
			"updated_at": "2019-09-25T13:05:45Z",
			"closed_at": null,
			"author_association": "NONE",
			"body": "<!-- üö® STOP üö® ùó¶ùóßùó¢ùó£ üö® ùë∫ùëªùë∂ùë∑ üö®\r\n\r\nHalf of all issues filed here are duplicates, answered in the FAQ, or not appropriate for the bug tracker. Even if you think you've found a *bug*, please read the FAQ first, especially the Common \"Bugs\" That Aren't Bugs section!\r\n\r\nPlease help us by doing the following steps before logging an issue:\r\n  * Search: https://github.com/Microsoft/TypeScript/search?type=Issues\r\n  * Read the FAQ: https://github.com/Microsoft/TypeScript/wiki/FAQ\r\n\r\nPlease fill in the *entire* template below.\r\n-->\r\n\r\n<!-- Please try to reproduce the issue with `typescript@next`. It may have already been fixed. -->\r\n**TypeScript Version:**  3.4.5\r\n\r\n<!-- Search terms you tried before logging this (so others can find this issue more easily) -->\r\n**Search Terms:**\r\n\r\nExhaustive switch return type does not work when wrapped in a try-catch\r\n\r\n**Code**\r\n\r\n```ts\r\nenum Foo {\r\n  One,\r\n  Two,\r\n  Three\r\n}\r\n\r\nfunction test(type: Foo): number {\r\n  switch (type) {\r\n    case Foo.One:\r\n      return 0;\r\n    case Foo.Two:\r\n      return 0;\r\n    case Foo.Three:\r\n      return 0;\r\n  }\r\n}\r\n\r\nfunction test2(type: Foo): number { // ERROR\r\n  try {\r\n    switch (type) {\r\n      case Foo.One:\r\n        return 0;\r\n      case Foo.Two:\r\n        return 0;\r\n      case Foo.Three:\r\n        return 0;\r\n    }\r\n  } catch (e) {\r\n      throw new Error('some error')\r\n  }\r\n}\r\n```\r\n\r\n[playground](http://www.typescriptlang.org/play/#code/KYOwrgtgBAYg9nKBvAUFKB5EwA0aoAqA7nHugQBYBOwwKAviigGZggDGALgJZwhSdgAZ04AKTgE8ADsABcsBAEp54CACNgVZPiFFundhSjjpwRdvTp2AQyHAFcAHRY5+S1BqcwVfgAYA3G5QNnYOjsRwskHont5+ge4h9vBOlDSu7jHAXj5QAfiMjCxsXLz8giIATCYy8inKUKoaWqjonFQSFpa6+obGkjLmrZlJYS5RmZaxufmToynhJBOTHtlxeQkjtskI4dS0y5PT8UGM6PTB1gZGomZd7pzUcESNwC8AolRUcFSiAORCOAQeyab5UP6KAoMFBAA)\r\n\r\n**Expected behavior:**\r\n\r\nIt should still work (because clearly in this case it can only return those values, or throw an error).\r\n\r\n**Actual behavior:**\r\n\r\nError\r\n",
			"score": 35.981045
		},
		{
			"url": "https://api.github.com/repos/microsoft/TypeScript/issues/33352",
			"repository_url": "https://api.github.com/repos/microsoft/TypeScript",
			"labels_url": "https://api.github.com/repos/microsoft/TypeScript/issues/33352/labels{/name}",
			"comments_url": "https://api.github.com/repos/microsoft/TypeScript/issues/33352/comments",
			"events_url": "https://api.github.com/repos/microsoft/TypeScript/issues/33352/events",
			"html_url": "https://github.com/microsoft/TypeScript/issues/33352",
			"id": 491792315,
			"node_id": "MDU6SXNzdWU0OTE3OTIzMTU=",
			"number": 33352,
			"title": "TypeScript 3.7 Iteration Plan",
			"user": {
				"login": "DanielRosenwasser",
				"id": 972891,
				"node_id": "MDQ6VXNlcjk3Mjg5MQ==",
				"avatar_url": "https://avatars2.githubusercontent.com/u/972891?v=4",
				"gravatar_id": "",
				"url": "https://api.github.com/users/DanielRosenwasser",
				"html_url": "https://github.com/DanielRosenwasser",
				"followers_url": "https://api.github.com/users/DanielRosenwasser/followers",
				"following_url": "https://api.github.com/users/DanielRosenwasser/following{/other_user}",
				"gists_url": "https://api.github.com/users/DanielRosenwasser/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/DanielRosenwasser/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/DanielRosenwasser/subscriptions",
				"organizations_url": "https://api.github.com/users/DanielRosenwasser/orgs",
				"repos_url": "https://api.github.com/users/DanielRosenwasser/repos",
				"events_url": "https://api.github.com/users/DanielRosenwasser/events{/privacy}",
				"received_events_url": "https://api.github.com/users/DanielRosenwasser/received_events",
				"type": "User",
				"site_admin": false
			},
			"labels": [
				{
					"id": 1183172971,
					"node_id": "MDU6TGFiZWwxMTgzMTcyOTcx",
					"url": "https://api.github.com/repos/microsoft/TypeScript/labels/Planning",
					"name": "Planning",
					"color": "4770b7",
					"default": false
				}
			],
			"state": "open",
			"locked": false,
			"assignee": null,
			"assignees": [],
			"milestone": null,
			"comments": 4,
			"created_at": "2019-09-10T17:00:50Z",
			"updated_at": "2019-09-15T17:03:48Z",
			"closed_at": null,
			"author_association": "MEMBER",
			"body": "This document outlines our focused tasks for TypeScript 3.7, as well as some of the discussion that explains how/why we prioritized certain work items. Nothing is set in stone, but we will strive to complete them in a reasonable timeframe.\r\n\r\n# Dates\r\n\r\nDate          |    Event\r\n--------------|------------------------\r\nAugust 28th   | TypeScript 3.6 Release\r\nSeptember 27th| Create 3.7 Beta (3.7.0) Build for Testing\r\nOctober 1st   | **TypeScript 3.7 Beta Release**\r\nOctober 18th  | Create 3.7 RC (3.7.1) Build for Testing\r\nOctober 22nd  | **TypeScript 3.7 RC Release**\r\nNovember 1st  | Create 3.7 Final (3.7.2) Build for Testing\r\nNovember 5th  | **TypeScript 3.7 Final Release** üöÄ\r\n\r\n# Work Items\r\n\r\n## Expected Work Items\r\n\r\n* Language\r\n    * [Optional Chaining](https://github.com/microsoft/TypeScript/issues/16)\r\n    * [Nullish Coalescing](https://github.com/microsoft/TypeScript/issues/26578)\r\n    * [Assertion Signatures](https://github.com/microsoft/TypeScript/pull/32695)\r\n    * [Recursive Type References](https://github.com/microsoft/TypeScript/pull/33050)\r\n    * [ECMAScript Private Fields](https://github.com/Microsoft/TypeScript/pull/30829)\r\n    * [Top-Level `await`](https://github.com/microsoft/TypeScript/issues/25988)\r\n    * Compiler\r\n    * [`--declaration` and `--allowJs`](https://github.com/Microsoft/TypeScript/issues/7546)\r\n    * [`--declaration` and `--isolatedModules`](https://github.com/Microsoft/TypeScript/issues/29490)\r\n* Editor Features\r\n    * [Call hierarchy](https://github.com/Microsoft/vscode/issues/16110)\r\n    * Polishing auto-import functionality (fixing issues, adding functionality)\r\n    * Project references improvements\r\n        * Opening unbuilt project reference solutions (for fresh `git clone` scenarios)\r\n        * Delayed loading of projects (improving performance and memory consumption)\r\n* Performance\r\n    * Rolling Issues\r\n    * Experiments in Perf\r\n    * Customer Development/Investigation\r\n    * Get performance data from TSServer crawler work.\r\n* Infrastructure\r\n    * Automated testing infrastructure for the language service on real world code\r\n    * [Migrate repo to ESLint](https://github.com/Microsoft/TypeScript/issues/30553)\r\n    * [Investigate smaller package publish](https://github.com/microsoft/TypeScript/issues/27891)\r\n    * [Dual-publishing `@types` on GitHub package registry](https://github.com/microsoft/TypeScript/issues/33330)\r\n* [Website and Documentation](https://github.com/microsoft/TypeScript/issues/31983)\r\n    * [New Handbook](https://github.com/Microsoft/TypeScript-New-Handbook/)\r\n    * Redesign\r\n\r\n## Deferred Work Items\r\n\r\n*None from planning meeting*\r\n______\r\n\r\n# Planning Meeting Notes\r\n\r\n## Motivations\r\n\r\n* Bug backlog\r\n* [Goals and current 6-month roadmap](https://github.com/Microsoft/TypeScript/issues/29288)\r\n* GitHub user feedback (üëçs)\r\n* Feedback from customer interviews, social media, past iteration plans\r\n* Visual Studio and Visual Studio Code feedback, as well as new functionality demands\r\n* Actionable PRs (need to make a call)\r\n\r\n* Language\r\n    * Type System Innovation\r\n        * Assertion Signatures\r\n        * Recursive Type References\r\n    * Standards Conformance\r\n        * ECMAScript Private Fields\r\n        * Nullish Coalescing\r\n        * Optional Chaining\r\n        * Top level `await`\r\n        * Transition plan for class fields\r\n* Compiler\r\n    * [`--declaration` and `--allowJs`](https://github.com/Microsoft/TypeScript/issues/7546)\r\n    * `--declaration` and `--isolatedModules`\r\n    * Investigate compiler plugin API\r\n* Infrastructure\r\n    * [Migrate repo to ESLint](https://github.com/Microsoft/TypeScript/issues/30553)\r\n    * Investigate smaller package publish\r\n        * Might have ideas for removing unnecessary files.\r\n    * Dual-publishing `@types` on GitHub package registry\r\n        * Today, types packages are automatically fetched to power IntelliSense in VS and VS Code.\r\n        * GitHub now provides its own registry.\r\n        * We want to ensure that there is some level of redundancy.\r\n* Editor Productivity\r\n    * [Call hierarchy](https://github.com/Microsoft/vscode/issues/16110)\r\n    * Polishing auto-import functionality (fixing issues, adding functionality)\r\n        * Just expect more to come in.\r\n    * Project references improvements\r\n        * Opening unbuilt project reference solutions (git clone scenarios)\r\n        * Delayed loading of projects (improving performance and memory consumption)\r\n* Website and Documentation\r\n    * New Handbook\r\n        * Finishing up chapters (Enums and Modules) in core handbook\r\n    * Redesign\r\n        * Core messaging\r\n        * Samples\r\n        * New community page for meetups/conferences\r\n        * Integrating the new handbook into the site\r\n        * Ensure full accessibility\r\n* Stability\r\n    * TSServer crawler\r\n        * Currently takes a fixed set of repos\r\n            * That's fine.\r\n* Performance\r\n    * Rolling Issues\r\n    * Experiments in Perf\r\n        * Can we incrementally bind, reuse checking results, etc.?\r\n    * Customer Development/Investigation\r\n        * Establish hypotheses\r\n        * Validate/invalidate\r\n        * Concept/value testing\r\n        * Implementation\r\n    * Get performance data from TSServer crawler work.\r\n",
			"score": 33.93734
		},
		{
			"url": "https://api.github.com/repos/microsoft/TypeScript/issues/28403",
			"repository_url": "https://api.github.com/repos/microsoft/TypeScript",
			"labels_url": "https://api.github.com/repos/microsoft/TypeScript/issues/28403/labels{/name}",
			"comments_url": "https://api.github.com/repos/microsoft/TypeScript/issues/28403/comments",
			"events_url": "https://api.github.com/repos/microsoft/TypeScript/issues/28403/events",
			"html_url": "https://github.com/microsoft/TypeScript/pull/28403",
			"id": 378512706,
			"node_id": "MDExOlB1bGxSZXF1ZXN0MjI5MjAxOTI3",
			"number": 28403,
			"title": "Convert node and symbol links into checker-local sparse arrays with per-property getters and setters",
			"user": {
				"login": "weswigham",
				"id": 2932786,
				"node_id": "MDQ6VXNlcjI5MzI3ODY=",
				"avatar_url": "https://avatars3.githubusercontent.com/u/2932786?v=4",
				"gravatar_id": "",
				"url": "https://api.github.com/users/weswigham",
				"html_url": "https://github.com/weswigham",
				"followers_url": "https://api.github.com/users/weswigham/followers",
				"following_url": "https://api.github.com/users/weswigham/following{/other_user}",
				"gists_url": "https://api.github.com/users/weswigham/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/weswigham/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/weswigham/subscriptions",
				"organizations_url": "https://api.github.com/users/weswigham/orgs",
				"repos_url": "https://api.github.com/users/weswigham/repos",
				"events_url": "https://api.github.com/users/weswigham/events{/privacy}",
				"received_events_url": "https://api.github.com/users/weswigham/received_events",
				"type": "User",
				"site_admin": false
			},
			"labels": [],
			"state": "open",
			"locked": false,
			"assignee": {
				"login": "weswigham",
				"id": 2932786,
				"node_id": "MDQ6VXNlcjI5MzI3ODY=",
				"avatar_url": "https://avatars3.githubusercontent.com/u/2932786?v=4",
				"gravatar_id": "",
				"url": "https://api.github.com/users/weswigham",
				"html_url": "https://github.com/weswigham",
				"followers_url": "https://api.github.com/users/weswigham/followers",
				"following_url": "https://api.github.com/users/weswigham/following{/other_user}",
				"gists_url": "https://api.github.com/users/weswigham/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/weswigham/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/weswigham/subscriptions",
				"organizations_url": "https://api.github.com/users/weswigham/orgs",
				"repos_url": "https://api.github.com/users/weswigham/repos",
				"events_url": "https://api.github.com/users/weswigham/events{/privacy}",
				"received_events_url": "https://api.github.com/users/weswigham/received_events",
				"type": "User",
				"site_admin": false
			},
			"assignees": [
				{
					"login": "weswigham",
					"id": 2932786,
					"node_id": "MDQ6VXNlcjI5MzI3ODY=",
					"avatar_url": "https://avatars3.githubusercontent.com/u/2932786?v=4",
					"gravatar_id": "",
					"url": "https://api.github.com/users/weswigham",
					"html_url": "https://github.com/weswigham",
					"followers_url": "https://api.github.com/users/weswigham/followers",
					"following_url": "https://api.github.com/users/weswigham/following{/other_user}",
					"gists_url": "https://api.github.com/users/weswigham/gists{/gist_id}",
					"starred_url": "https://api.github.com/users/weswigham/starred{/owner}{/repo}",
					"subscriptions_url": "https://api.github.com/users/weswigham/subscriptions",
					"organizations_url": "https://api.github.com/users/weswigham/orgs",
					"repos_url": "https://api.github.com/users/weswigham/repos",
					"events_url": "https://api.github.com/users/weswigham/events{/privacy}",
					"received_events_url": "https://api.github.com/users/weswigham/received_events",
					"type": "User",
					"site_admin": false
				}
			],
			"milestone": null,
			"comments": 2,
			"created_at": "2018-11-07T23:24:04Z",
			"updated_at": "2019-04-30T15:43:28Z",
			"closed_at": null,
			"author_association": "MEMBER",
			"pull_request": {
				"url": "https://api.github.com/repos/microsoft/TypeScript/pulls/28403",
				"html_url": "https://github.com/microsoft/TypeScript/pull/28403",
				"diff_url": "https://github.com/microsoft/TypeScript/pull/28403.diff",
				"patch_url": "https://github.com/microsoft/TypeScript/pull/28403.patch"
			},
			"body": "Was talking about this with @ahejlsberg the other day. Still to need rerun perf tests to verify that this still gets us some perf gains (I put up #19163 a long time ago, but we hesitated on it because the API was eh, despite the perf gains); but this API (thanks for the suggestions @ahejlsberg) is actually nicer than our older symbol links API (in addition to being monomorphic), since adding new ones is easy and doesn't require synchronizing types. I'll have some perf testing results up soon.\r\n\r\nAs an aside, while refactoring I discovered we actually had two _unused_ `NodeLinks` members - `resolvedIndexInfo` and `resolvedJsxElementAllAttributesType`. They are simply gone, now.\r\n\r\n",
			"score": 33.30468
		},
		{
			"url": "https://api.github.com/repos/dotnet/roslyn/issues/711",
			"repository_url": "https://api.github.com/repos/dotnet/roslyn",
			"labels_url": "https://api.github.com/repos/dotnet/roslyn/issues/711/labels{/name}",
			"comments_url": "https://api.github.com/repos/dotnet/roslyn/issues/711/comments",
			"events_url": "https://api.github.com/repos/dotnet/roslyn/issues/711/events",
			"html_url": "https://github.com/dotnet/roslyn/issues/711",
			"id": 58382189,
			"node_id": "MDU6SXNzdWU1ODM4MjE4OQ==",
			"number": 711,
			"title": "Custom attributes are not treated as a first-class concept",
			"user": {
				"login": "dsaf",
				"id": 3845650,
				"node_id": "MDQ6VXNlcjM4NDU2NTA=",
				"avatar_url": "https://avatars3.githubusercontent.com/u/3845650?v=4",
				"gravatar_id": "",
				"url": "https://api.github.com/users/dsaf",
				"html_url": "https://github.com/dsaf",
				"followers_url": "https://api.github.com/users/dsaf/followers",
				"following_url": "https://api.github.com/users/dsaf/following{/other_user}",
				"gists_url": "https://api.github.com/users/dsaf/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/dsaf/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/dsaf/subscriptions",
				"organizations_url": "https://api.github.com/users/dsaf/orgs",
				"repos_url": "https://api.github.com/users/dsaf/repos",
				"events_url": "https://api.github.com/users/dsaf/events{/privacy}",
				"received_events_url": "https://api.github.com/users/dsaf/received_events",
				"type": "User",
				"site_admin": false
			},
			"labels": [
				{
					"id": 166377917,
					"node_id": "MDU6TGFiZWwxNjYzNzc5MTc=",
					"url": "https://api.github.com/repos/dotnet/roslyn/labels/Area-IDE",
					"name": "Area-IDE",
					"color": "5319e7",
					"default": false
				},
				{
					"id": 166677091,
					"node_id": "MDU6TGFiZWwxNjY2NzcwOTE=",
					"url": "https://api.github.com/repos/dotnet/roslyn/labels/Feature%20Request",
					"name": "Feature Request",
					"color": "e52727",
					"default": false
				}
			],
			"state": "open",
			"locked": false,
			"assignee": null,
			"assignees": [],
			"milestone": {
				"url": "https://api.github.com/repos/dotnet/roslyn/milestones/2",
				"html_url": "https://github.com/dotnet/roslyn/milestone/2",
				"labels_url": "https://api.github.com/repos/dotnet/roslyn/milestones/2/labels",
				"id": 937398,
				"node_id": "MDk6TWlsZXN0b25lOTM3Mzk4",
				"number": 2,
				"title": "Backlog",
				"description": "This represents work which is not planned for a specific release.\r\n\r\n<!---\r\n@huboard:{\"order\":0.25}\r\n-->\r\n",
				"creator": {
					"login": "jaredpar",
					"id": 146967,
					"node_id": "MDQ6VXNlcjE0Njk2Nw==",
					"avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4",
					"gravatar_id": "",
					"url": "https://api.github.com/users/jaredpar",
					"html_url": "https://github.com/jaredpar",
					"followers_url": "https://api.github.com/users/jaredpar/followers",
					"following_url": "https://api.github.com/users/jaredpar/following{/other_user}",
					"gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}",
					"starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}",
					"subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions",
					"organizations_url": "https://api.github.com/users/jaredpar/orgs",
					"repos_url": "https://api.github.com/users/jaredpar/repos",
					"events_url": "https://api.github.com/users/jaredpar/events{/privacy}",
					"received_events_url": "https://api.github.com/users/jaredpar/received_events",
					"type": "User",
					"site_admin": false
				},
				"open_issues": 4844,
				"closed_issues": 846,
				"state": "open",
				"created_at": "2015-01-15T20:46:02Z",
				"updated_at": "2019-09-25T13:12:03Z",
				"due_on": null,
				"closed_at": null
			},
			"comments": 3,
			"created_at": "2015-02-20T17:13:56Z",
			"updated_at": "2015-12-04T18:57:16Z",
			"closed_at": null,
			"author_association": "NONE",
			"body": "Custom attributes are a very special (underappreciated) language construct. The fact that they are classes is merely an implementation detail.\n\nThey can be:\n- selectively applied to specific language elements;\n- allowed (or not) to be applied multiple times;\n- inherited;\n- overriden.\n\n``` csharp\n[System.AttributeUsage(AttributeTargets.Class | AttributeTargets.Method, AllowMultiple = false, Inherited = true)]\n```\n\nAction items:\n\n1) create a separate kind of tooltip for attributes: \"attribute ...\"\n2) present fundamental attribute information in a nice way:\n    - target(s);\n    - multiplicity;\n    - inheritability;\n    - whether it overrides an inherited attribute.\n3) improve the e.g. \"(class) ...\" tooltip to show:\n    - inherited attributes;\n    - inherited but overridden attributes (ideally the difference, but it could be hard).\n4) always show the inherited custom attributes as a gray font overlay.\n\nPS: is QuickInfo the Roslyn's term for this kind of tooltips?\n",
			"score": 32.324333
		},
		{
			"url": "https://api.github.com/repos/billti/node-es2015/issues/1",
			"repository_url": "https://api.github.com/repos/billti/node-es2015",
			"labels_url": "https://api.github.com/repos/billti/node-es2015/issues/1/labels{/name}",
			"comments_url": "https://api.github.com/repos/billti/node-es2015/issues/1/comments",
			"events_url": "https://api.github.com/repos/billti/node-es2015/issues/1/events",
			"html_url": "https://github.com/billti/node-es2015/issues/1",
			"id": 160592677,
			"node_id": "MDU6SXNzdWUxNjA1OTI2Nzc=",
			"number": 1,
			"title": "Update main page per latest Node.js modules discussion",
			"user": {
				"login": "billti",
				"id": 993909,
				"node_id": "MDQ6VXNlcjk5MzkwOQ==",
				"avatar_url": "https://avatars3.githubusercontent.com/u/993909?v=4",
				"gravatar_id": "",
				"url": "https://api.github.com/users/billti",
				"html_url": "https://github.com/billti",
				"followers_url": "https://api.github.com/users/billti/followers",
				"following_url": "https://api.github.com/users/billti/following{/other_user}",
				"gists_url": "https://api.github.com/users/billti/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/billti/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/billti/subscriptions",
				"organizations_url": "https://api.github.com/users/billti/orgs",
				"repos_url": "https://api.github.com/users/billti/repos",
				"events_url": "https://api.github.com/users/billti/events{/privacy}",
				"received_events_url": "https://api.github.com/users/billti/received_events",
				"type": "User",
				"site_admin": false
			},
			"labels": [],
			"state": "open",
			"locked": false,
			"assignee": null,
			"assignees": [],
			"milestone": null,
			"comments": 1,
			"created_at": "2016-06-16T07:11:27Z",
			"updated_at": "2016-06-16T21:15:06Z",
			"closed_at": null,
			"author_association": "OWNER",
			"body": "The README was copied from an earlier Gist, and should be updated to reflect the latest info from discussions with @jdalton around unambiguous grammar and repeat parse attempts.\n\n@jdalton The info in https://github.com/billti/node-es2015/blob/master/algorithms.md file is up to date, and much of the README is as discussed (esp. with regards to why not to do fat packages with side-by-side versions of the same module). Please take a look, and loop in @bmeck if desired.\n\nPinging @ahejlsberg to check the algorithms write-up (especially the hoisting) is per our chat earlier.\n",
			"score": 30.4745
		},
		{
			"url": "https://api.github.com/repos/microsoft/TypeScript/issues/31947",
			"repository_url": "https://api.github.com/repos/microsoft/TypeScript",
			"labels_url": "https://api.github.com/repos/microsoft/TypeScript/issues/31947/labels{/name}",
			"comments_url": "https://api.github.com/repos/microsoft/TypeScript/issues/31947/comments",
			"events_url": "https://api.github.com/repos/microsoft/TypeScript/issues/31947/events",
			"html_url": "https://github.com/microsoft/TypeScript/pull/31947",
			"id": 457190801,
			"node_id": "MDExOlB1bGxSZXF1ZXN0Mjg5MDU0NTgx",
			"number": 31947,
			"title": "Failing test + Discussion for #31230",
			"user": {
				"login": "orta",
				"id": 49038,
				"node_id": "MDQ6VXNlcjQ5MDM4",
				"avatar_url": "https://avatars2.githubusercontent.com/u/49038?v=4",
				"gravatar_id": "",
				"url": "https://api.github.com/users/orta",
				"html_url": "https://github.com/orta",
				"followers_url": "https://api.github.com/users/orta/followers",
				"following_url": "https://api.github.com/users/orta/following{/other_user}",
				"gists_url": "https://api.github.com/users/orta/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/orta/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/orta/subscriptions",
				"organizations_url": "https://api.github.com/users/orta/orgs",
				"repos_url": "https://api.github.com/users/orta/repos",
				"events_url": "https://api.github.com/users/orta/events{/privacy}",
				"received_events_url": "https://api.github.com/users/orta/received_events",
				"type": "User",
				"site_admin": false
			},
			"labels": [],
			"state": "open",
			"locked": false,
			"assignee": {
				"login": "orta",
				"id": 49038,
				"node_id": "MDQ6VXNlcjQ5MDM4",
				"avatar_url": "https://avatars2.githubusercontent.com/u/49038?v=4",
				"gravatar_id": "",
				"url": "https://api.github.com/users/orta",
				"html_url": "https://github.com/orta",
				"followers_url": "https://api.github.com/users/orta/followers",
				"following_url": "https://api.github.com/users/orta/following{/other_user}",
				"gists_url": "https://api.github.com/users/orta/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/orta/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/orta/subscriptions",
				"organizations_url": "https://api.github.com/users/orta/orgs",
				"repos_url": "https://api.github.com/users/orta/repos",
				"events_url": "https://api.github.com/users/orta/events{/privacy}",
				"received_events_url": "https://api.github.com/users/orta/received_events",
				"type": "User",
				"site_admin": false
			},
			"assignees": [
				{
					"login": "orta",
					"id": 49038,
					"node_id": "MDQ6VXNlcjQ5MDM4",
					"avatar_url": "https://avatars2.githubusercontent.com/u/49038?v=4",
					"gravatar_id": "",
					"url": "https://api.github.com/users/orta",
					"html_url": "https://github.com/orta",
					"followers_url": "https://api.github.com/users/orta/followers",
					"following_url": "https://api.github.com/users/orta/following{/other_user}",
					"gists_url": "https://api.github.com/users/orta/gists{/gist_id}",
					"starred_url": "https://api.github.com/users/orta/starred{/owner}{/repo}",
					"subscriptions_url": "https://api.github.com/users/orta/subscriptions",
					"organizations_url": "https://api.github.com/users/orta/orgs",
					"repos_url": "https://api.github.com/users/orta/repos",
					"events_url": "https://api.github.com/users/orta/events{/privacy}",
					"received_events_url": "https://api.github.com/users/orta/received_events",
					"type": "User",
					"site_admin": false
				}
			],
			"milestone": null,
			"comments": 2,
			"created_at": "2019-06-17T23:21:45Z",
			"updated_at": "2019-08-15T16:58:12Z",
			"closed_at": null,
			"author_association": "MEMBER",
			"pull_request": {
				"url": "https://api.github.com/repos/microsoft/TypeScript/pulls/31947",
				"html_url": "https://github.com/microsoft/TypeScript/pull/31947",
				"diff_url": "https://github.com/microsoft/TypeScript/pull/31947.diff",
				"patch_url": "https://github.com/microsoft/TypeScript/pull/31947.patch"
			},
			"body": "Fixes #31230\r\n\r\nWhat this looks like under the hood is that tsc gets stuck in an infinite loop between type narrowing and inferring types. It looks for related types, jumps into [recursiveTypeRelatedTo](https://github.com/orta/typescript/blob/74c6bc1f85c2ab36fdb789aa0ef6ee5dbde5afdd/src/compiler/checker.ts#L12636) finds itself needing to go back to finding related tasks ad infinitum.\r\n\r\n@weswigham mentioned that it's quite likely in order to fix this we'll need to keep cache  onwhether a type is currently being inferred, which could allow a guard against the recurse. We think we'll need to chat with @ahejlsberg about it.",
			"score": 30.355408
		},
		{
			"url": "https://api.github.com/repos/microsoft/TypeScript/issues/23018",
			"repository_url": "https://api.github.com/repos/microsoft/TypeScript",
			"labels_url": "https://api.github.com/repos/microsoft/TypeScript/issues/23018/labels{/name}",
			"comments_url": "https://api.github.com/repos/microsoft/TypeScript/issues/23018/comments",
			"events_url": "https://api.github.com/repos/microsoft/TypeScript/issues/23018/events",
			"html_url": "https://github.com/microsoft/TypeScript/issues/23018",
			"id": 310046127,
			"node_id": "MDU6SXNzdWUzMTAwNDYxMjc=",
			"number": 23018,
			"title": "Unify conditional types' else-clauses",
			"user": {
				"login": "falsandtru",
				"id": 3143368,
				"node_id": "MDQ6VXNlcjMxNDMzNjg=",
				"avatar_url": "https://avatars2.githubusercontent.com/u/3143368?v=4",
				"gravatar_id": "",
				"url": "https://api.github.com/users/falsandtru",
				"html_url": "https://github.com/falsandtru",
				"followers_url": "https://api.github.com/users/falsandtru/followers",
				"following_url": "https://api.github.com/users/falsandtru/following{/other_user}",
				"gists_url": "https://api.github.com/users/falsandtru/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/falsandtru/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/falsandtru/subscriptions",
				"organizations_url": "https://api.github.com/users/falsandtru/orgs",
				"repos_url": "https://api.github.com/users/falsandtru/repos",
				"events_url": "https://api.github.com/users/falsandtru/events{/privacy}",
				"received_events_url": "https://api.github.com/users/falsandtru/received_events",
				"type": "User",
				"site_admin": false
			},
			"labels": [
				{
					"id": 373477802,
					"node_id": "MDU6TGFiZWwzNzM0Nzc4MDI=",
					"url": "https://api.github.com/repos/microsoft/TypeScript/labels/Awaiting%20More%20Feedback",
					"name": "Awaiting More Feedback",
					"color": "556677",
					"default": false
				},
				{
					"id": 113971155,
					"node_id": "MDU6TGFiZWwxMTM5NzExNTU=",
					"url": "https://api.github.com/repos/microsoft/TypeScript/labels/Suggestion",
					"name": "Suggestion",
					"color": "006b75",
					"default": false
				}
			],
			"state": "open",
			"locked": false,
			"assignee": null,
			"assignees": [],
			"milestone": null,
			"comments": 1,
			"created_at": "2018-03-30T11:41:23Z",
			"updated_at": "2018-08-22T20:49:27Z",
			"closed_at": null,
			"author_association": "CONTRIBUTOR",
			"body": "If possible.\r\n\r\ncc @ahejlsberg \r\n\r\n```ts\r\ntype A = T extends U ? T extends V ? T extends W ? T : never : never : never;\r\ntype B = T extends U ? T extends V ? T extends W ? T :: never; // unified\r\n```",
			"score": 29.92486
		},
		{
			"url": "https://api.github.com/repos/microsoft/TypeScript/issues/17476",
			"repository_url": "https://api.github.com/repos/microsoft/TypeScript",
			"labels_url": "https://api.github.com/repos/microsoft/TypeScript/issues/17476/labels{/name}",
			"comments_url": "https://api.github.com/repos/microsoft/TypeScript/issues/17476/comments",
			"events_url": "https://api.github.com/repos/microsoft/TypeScript/issues/17476/events",
			"html_url": "https://github.com/microsoft/TypeScript/issues/17476",
			"id": 246218819,
			"node_id": "MDU6SXNzdWUyNDYyMTg4MTk=",
			"number": 17476,
			"title": "Many Pull Requests by contributors have not been maintained for a long time",
			"user": {
				"login": "falsandtru",
				"id": 3143368,
				"node_id": "MDQ6VXNlcjMxNDMzNjg=",
				"avatar_url": "https://avatars2.githubusercontent.com/u/3143368?v=4",
				"gravatar_id": "",
				"url": "https://api.github.com/users/falsandtru",
				"html_url": "https://github.com/falsandtru",
				"followers_url": "https://api.github.com/users/falsandtru/followers",
				"following_url": "https://api.github.com/users/falsandtru/following{/other_user}",
				"gists_url": "https://api.github.com/users/falsandtru/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/falsandtru/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/falsandtru/subscriptions",
				"organizations_url": "https://api.github.com/users/falsandtru/orgs",
				"repos_url": "https://api.github.com/users/falsandtru/repos",
				"events_url": "https://api.github.com/users/falsandtru/events{/privacy}",
				"received_events_url": "https://api.github.com/users/falsandtru/received_events",
				"type": "User",
				"site_admin": false
			},
			"labels": [
				{
					"id": 127911875,
					"node_id": "MDU6TGFiZWwxMjc5MTE4NzU=",
					"url": "https://api.github.com/repos/microsoft/TypeScript/labels/Discussion",
					"name": "Discussion",
					"color": "5319e7",
					"default": false
				}
			],
			"state": "open",
			"locked": false,
			"assignee": {
				"login": "DanielRosenwasser",
				"id": 972891,
				"node_id": "MDQ6VXNlcjk3Mjg5MQ==",
				"avatar_url": "https://avatars2.githubusercontent.com/u/972891?v=4",
				"gravatar_id": "",
				"url": "https://api.github.com/users/DanielRosenwasser",
				"html_url": "https://github.com/DanielRosenwasser",
				"followers_url": "https://api.github.com/users/DanielRosenwasser/followers",
				"following_url": "https://api.github.com/users/DanielRosenwasser/following{/other_user}",
				"gists_url": "https://api.github.com/users/DanielRosenwasser/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/DanielRosenwasser/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/DanielRosenwasser/subscriptions",
				"organizations_url": "https://api.github.com/users/DanielRosenwasser/orgs",
				"repos_url": "https://api.github.com/users/DanielRosenwasser/repos",
				"events_url": "https://api.github.com/users/DanielRosenwasser/events{/privacy}",
				"received_events_url": "https://api.github.com/users/DanielRosenwasser/received_events",
				"type": "User",
				"site_admin": false
			},
			"assignees": [
				{
					"login": "DanielRosenwasser",
					"id": 972891,
					"node_id": "MDQ6VXNlcjk3Mjg5MQ==",
					"avatar_url": "https://avatars2.githubusercontent.com/u/972891?v=4",
					"gravatar_id": "",
					"url": "https://api.github.com/users/DanielRosenwasser",
					"html_url": "https://github.com/DanielRosenwasser",
					"followers_url": "https://api.github.com/users/DanielRosenwasser/followers",
					"following_url": "https://api.github.com/users/DanielRosenwasser/following{/other_user}",
					"gists_url": "https://api.github.com/users/DanielRosenwasser/gists{/gist_id}",
					"starred_url": "https://api.github.com/users/DanielRosenwasser/starred{/owner}{/repo}",
					"subscriptions_url": "https://api.github.com/users/DanielRosenwasser/subscriptions",
					"organizations_url": "https://api.github.com/users/DanielRosenwasser/orgs",
					"repos_url": "https://api.github.com/users/DanielRosenwasser/repos",
					"events_url": "https://api.github.com/users/DanielRosenwasser/events{/privacy}",
					"received_events_url": "https://api.github.com/users/DanielRosenwasser/received_events",
					"type": "User",
					"site_admin": false
				},
				{
					"login": "rbuckton",
					"id": 3902892,
					"node_id": "MDQ6VXNlcjM5MDI4OTI=",
					"avatar_url": "https://avatars2.githubusercontent.com/u/3902892?v=4",
					"gravatar_id": "",
					"url": "https://api.github.com/users/rbuckton",
					"html_url": "https://github.com/rbuckton",
					"followers_url": "https://api.github.com/users/rbuckton/followers",
					"following_url": "https://api.github.com/users/rbuckton/following{/other_user}",
					"gists_url": "https://api.github.com/users/rbuckton/gists{/gist_id}",
					"starred_url": "https://api.github.com/users/rbuckton/starred{/owner}{/repo}",
					"subscriptions_url": "https://api.github.com/users/rbuckton/subscriptions",
					"organizations_url": "https://api.github.com/users/rbuckton/orgs",
					"repos_url": "https://api.github.com/users/rbuckton/repos",
					"events_url": "https://api.github.com/users/rbuckton/events{/privacy}",
					"received_events_url": "https://api.github.com/users/rbuckton/received_events",
					"type": "User",
					"site_admin": false
				}
			],
			"milestone": null,
			"comments": 6,
			"created_at": "2017-07-28T02:15:47Z",
			"updated_at": "2017-11-02T13:36:17Z",
			"closed_at": null,
			"author_association": "CONTRIBUTOR",
			"body": "Even though those fixes are requested officially. Specially, https://github.com/Microsoft/TSJS-lib-generator/pull/227 should be reviewed and merged quickly.\r\n\r\n@ahejlsberg @DanielRosenwasser @sandersn @RyanCavanaugh @rbuckton @weswigham @billti @andy-ms @sheetalkamat ",
			"score": 29.424456
		},
		{
			"url": "https://api.github.com/repos/react-bootstrap/react-bootstrap/issues/4524",
			"repository_url": "https://api.github.com/repos/react-bootstrap/react-bootstrap",
			"labels_url": "https://api.github.com/repos/react-bootstrap/react-bootstrap/issues/4524/labels{/name}",
			"comments_url": "https://api.github.com/repos/react-bootstrap/react-bootstrap/issues/4524/comments",
			"events_url": "https://api.github.com/repos/react-bootstrap/react-bootstrap/issues/4524/events",
			"html_url": "https://github.com/react-bootstrap/react-bootstrap/pull/4524",
			"id": 497825349,
			"node_id": "MDExOlB1bGxSZXF1ZXN0MzIwODgyMTcz",
			"number": 4524,
			"title": "fix typings for Components passing props to other component",
			"user": {
				"login": "olmobrutall",
				"id": 720953,
				"node_id": "MDQ6VXNlcjcyMDk1Mw==",
				"avatar_url": "https://avatars0.githubusercontent.com/u/720953?v=4",
				"gravatar_id": "",
				"url": "https://api.github.com/users/olmobrutall",
				"html_url": "https://github.com/olmobrutall",
				"followers_url": "https://api.github.com/users/olmobrutall/followers",
				"following_url": "https://api.github.com/users/olmobrutall/following{/other_user}",
				"gists_url": "https://api.github.com/users/olmobrutall/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/olmobrutall/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/olmobrutall/subscriptions",
				"organizations_url": "https://api.github.com/users/olmobrutall/orgs",
				"repos_url": "https://api.github.com/users/olmobrutall/repos",
				"events_url": "https://api.github.com/users/olmobrutall/events{/privacy}",
				"received_events_url": "https://api.github.com/users/olmobrutall/received_events",
				"type": "User",
				"site_admin": false
			},
			"labels": [],
			"state": "open",
			"locked": false,
			"assignee": null,
			"assignees": [],
			"milestone": null,
			"comments": 4,
			"created_at": "2019-09-24T17:29:53Z",
			"updated_at": "2019-09-25T11:46:12Z",
			"closed_at": null,
			"author_association": "NONE",
			"pull_request": {
				"url": "https://api.github.com/repos/react-bootstrap/react-bootstrap/pulls/4524",
				"html_url": "https://github.com/react-bootstrap/react-bootstrap/pull/4524",
				"diff_url": "https://github.com/react-bootstrap/react-bootstrap/pull/4524.diff",
				"patch_url": "https://github.com/react-bootstrap/react-bootstrap/pull/4524.patch"
			},
			"body": "This is the real solution to solve the problem in https://github.com/react-bootstrap/react-bootstrap/pull/4512. \r\n\r\nWith this change the `As` generic argument and the dependent props are correctly inferred for both Intrinsics ('div', 'a', ...) that where already working as well as other react-bootstrap Components ('SafeAnchor',  'Button') **new fix!!**\r\n\r\nHere is a playground snippet comparing the two solutions. \r\n\r\nhttp://www.typescriptlang.org/play/?jsx=2#code/JYWwDg9gTgLgBAKjgQwM5wEoFNkGN4BmUEIcA5FDvmQNwBQdWAHpLHDAJ5hZwDyIwGAB4AKgBo4AVQB8cALxwACsFwBrURICiTXABsArgBMsQ1Vg4QCccXDMWrM6fUYto8Tt0xYwuvFkXEYKhCAJIAdmFYUHDMMFhhhujYeDAAdJq6WCDxMCJcWBKKsgr8gkJ0cF4pqQDCJJCRYTABEEEA6oIAFtgEoRFR0mIVSnSyAGTDis7MrPDATVEEfnAAQqgBWATATC1BQgCC6LHxiVX46ZnZTXncsgDew2gA-ABccIf0lQBG65RbTK84KgYFB5gBzegAXwYMzccD0aHQaw2-zq4AgjWEw0OMSYcQSSSoaQyWRyNwKk3kcDu0MqsmOBLOaTRDRyQmwPj8u2ChwkyL+225B1Q4yU0nucGhLlm7Hyq1+m22LIxORqvlQwWxRzxJ0J1RJV1y+SGlUUVJpw2KTNq9RVTTViPZ3l8uH8gR5qD5Cv+QsOoqKEqlsLY8ziUCWrrgADlkAA3bnU4ZhONfZBQfmKgFvYGgsIQ4a4NOGAASOGM6e920BOfBnzgsbTwGQTUBZBgyB+ZDgAB9yGBgLpdKhaI98MBY1gANLmQH6MKqMIQADuYTrxiW+l0MH2Y4n044s-ni5Xda2g8BXwgEEyzbrACt9MDgAQD29L9ecKvhsRMtWQbWkxTNMLyvG8v0qDF9wAEWXMJAWSc590vItNAnJpi2bQxMigIQYE6YARShBhjARSh4XVdAY1jcpKhxBlTgQ4lLjJOUFDIQxxzIS1cXxU4M1RW1MWFCQqO5e46CDVwQwWcNlhEDtfladAHkqFJxynGc3jnBdYLXTZkE3bddw0184G049wPrRtmxgVt207Hs+wHIcR0qEFm1QQRgAxQEliHHhe0Yi5SWufI62AQxs3-PM6xACA5xgXgwk0GSQI-W9hjnOKEqS7RBDSsCiLoEjfDIhENWsBS2mIPMaPebVeL1c4DRYzwFA8LBLGjONuPopFKyYZUhN5SqfjE6lJWIrBSJ4cr0Hkn4MGAMFOixWiGt1a0WtCtr5RRJVBNVCihHYziRLjMTep1Rl+IO9Fhs9UbFKCQMGDoBtomQKlRCqmqwTgCK5AAImQIG4AIK9gdTKAgYAeicOBYYQCGICBTp4t0QwYigYhPvQRd4HXeYsEMBBYfetM4C+b6FtQJaVrmQxgdB8HIaB6G4YRpGUbgMBiEMfRXSOHHoBQbVuHwEmyaAA\r\n\r\nI've checked with a relatively big codebase and works ok. ",
			"score": 29.184183
		},
		{
			"url": "https://api.github.com/repos/microsoft/TypeScript/issues/29793",
			"repository_url": "https://api.github.com/repos/microsoft/TypeScript",
			"labels_url": "https://api.github.com/repos/microsoft/TypeScript/issues/29793/labels{/name}",
			"comments_url": "https://api.github.com/repos/microsoft/TypeScript/issues/29793/comments",
			"events_url": "https://api.github.com/repos/microsoft/TypeScript/issues/29793/events",
			"html_url": "https://github.com/microsoft/TypeScript/issues/29793",
			"id": 407618317,
			"node_id": "MDU6SXNzdWU0MDc2MTgzMTc=",
			"number": 29793,
			"title": "Mapped types replace `unknown` type with `{}` type",
			"user": {
				"login": "falsandtru",
				"id": 3143368,
				"node_id": "MDQ6VXNlcjMxNDMzNjg=",
				"avatar_url": "https://avatars2.githubusercontent.com/u/3143368?v=4",
				"gravatar_id": "",
				"url": "https://api.github.com/users/falsandtru",
				"html_url": "https://github.com/falsandtru",
				"followers_url": "https://api.github.com/users/falsandtru/followers",
				"following_url": "https://api.github.com/users/falsandtru/following{/other_user}",
				"gists_url": "https://api.github.com/users/falsandtru/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/falsandtru/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/falsandtru/subscriptions",
				"organizations_url": "https://api.github.com/users/falsandtru/orgs",
				"repos_url": "https://api.github.com/users/falsandtru/repos",
				"events_url": "https://api.github.com/users/falsandtru/events{/privacy}",
				"received_events_url": "https://api.github.com/users/falsandtru/received_events",
				"type": "User",
				"site_admin": false
			},
			"labels": [
				{
					"id": 113971155,
					"node_id": "MDU6TGFiZWwxMTM5NzExNTU=",
					"url": "https://api.github.com/repos/microsoft/TypeScript/labels/Suggestion",
					"name": "Suggestion",
					"color": "006b75",
					"default": false
				}
			],
			"state": "open",
			"locked": false,
			"assignee": null,
			"assignees": [],
			"milestone": null,
			"comments": 4,
			"created_at": "2019-02-07T09:58:08Z",
			"updated_at": "2019-02-13T08:17:44Z",
			"closed_at": null,
			"author_association": "CONTRIBUTOR",
			"body": "@ahejlsberg Probably #29740 made this regression.\r\n\r\n<!-- Please try to reproduce the issue with `typescript@next`. It may have already been fixed. -->\r\n**TypeScript Version:**  3.4.0-dev.20190207\r\n\r\n<!-- Search terms you tried before logging this (so others can find this issue more easily) -->\r\n**Search Terms:**\r\n\r\n**Code**\r\n\r\n```ts\r\ntype DeepReadonly<T> =\r\n  T extends void ? T :\r\n  { readonly [P in keyof T]: DeepReadonly<T[P]>; };\r\ntype m = { a: unknown }; // Also unknown[].\r\ntype i = DeepReadonly<m>;\r\n```\r\n\r\n**Expected behavior:**\r\n\r\n`i` is `{ readonly a: unknown; }`.\r\n\r\n**Actual behavior:**\r\n\r\n`i` is `{ readonly a: {}; }`.\r\n\r\n**Playground Link:** <!-- A link to a TypeScript Playground \"Share\" link which demonstrates this behavior -->\r\n\r\n**Related Issues:** <!-- Did you find other bugs that looked similar? -->\r\n",
			"score": 28.989742
		},
		{
			"url": "https://api.github.com/repos/facebook/flow/issues/6942",
			"repository_url": "https://api.github.com/repos/facebook/flow",
			"labels_url": "https://api.github.com/repos/facebook/flow/issues/6942/labels{/name}",
			"comments_url": "https://api.github.com/repos/facebook/flow/issues/6942/comments",
			"events_url": "https://api.github.com/repos/facebook/flow/issues/6942/events",
			"html_url": "https://github.com/facebook/flow/issues/6942",
			"id": 364486054,
			"node_id": "MDU6SXNzdWUzNjQ0ODYwNTQ=",
			"number": 6942,
			"title": "Mapping over same objects and overwriting values",
			"user": {
				"login": "HenriBeck",
				"id": 8514706,
				"node_id": "MDQ6VXNlcjg1MTQ3MDY=",
				"avatar_url": "https://avatars1.githubusercontent.com/u/8514706?v=4",
				"gravatar_id": "",
				"url": "https://api.github.com/users/HenriBeck",
				"html_url": "https://github.com/HenriBeck",
				"followers_url": "https://api.github.com/users/HenriBeck/followers",
				"following_url": "https://api.github.com/users/HenriBeck/following{/other_user}",
				"gists_url": "https://api.github.com/users/HenriBeck/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/HenriBeck/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/HenriBeck/subscriptions",
				"organizations_url": "https://api.github.com/users/HenriBeck/orgs",
				"repos_url": "https://api.github.com/users/HenriBeck/repos",
				"events_url": "https://api.github.com/users/HenriBeck/events{/privacy}",
				"received_events_url": "https://api.github.com/users/HenriBeck/received_events",
				"type": "User",
				"site_admin": false
			},
			"labels": [
				{
					"id": 385589332,
					"node_id": "MDU6TGFiZWwzODU1ODkzMzI=",
					"url": "https://api.github.com/repos/facebook/flow/labels/Typing:%20object%20model",
					"name": "Typing: object model",
					"color": "c2e0c6",
					"default": false
				},
				{
					"id": 1280502748,
					"node_id": "MDU6TGFiZWwxMjgwNTAyNzQ4",
					"url": "https://api.github.com/repos/facebook/flow/labels/needs%20triage",
					"name": "needs triage",
					"color": "052f7f",
					"default": false
				}
			],
			"state": "open",
			"locked": false,
			"assignee": null,
			"assignees": [],
			"milestone": null,
			"comments": 4,
			"created_at": "2018-09-27T13:50:09Z",
			"updated_at": "2019-05-31T09:06:02Z",
			"closed_at": null,
			"author_association": "NONE",
			"body": "When mapping over the same objects, flow doesn't allow to overwrite the values of the objects even though they are the same.\r\nI'm assuming that flow checks merely all of the values of an object and checks if there is only one type as the value and if it's the same.\r\n\r\nI guess this is a particular case. I think flow should only compare the types of the same keys and the structure of the object.\r\n\r\n```js\r\ntype Test = {\r\n\tkey1: boolean,\r\n\tkey2: string,\r\n\tkey4: number,\r\n\tkey6: Array<{}>,\r\n};\r\n\r\nfunction merge(obj1: Test, obj2: Test) {\r\n\tconst keys = Object.keys(obj2);\r\n\r\n\tfor (const key of keys) {\r\n\t\tobj1[key] = obj2[key];\r\n\t}\r\n\r\n\treturn obj1;\r\n}\r\n```\r\n\r\n[Try Flow](https://flow.org/try/#0PQKgBAAgZgNg9gdzCYAoVAXAngBwKZgAqeAzhmALxgDeqAkANZ5YCMAXGAEZxwx4CGAOwA09JlgBMHMgCcAloIDmoxswAsHQQFcAtpzwyV4gGwcAgjJn8sAHmoBfAHyj7AbnRQtggMYY5cQTAdA0U8AAo4TgArdiJSDGEwSKipOLIAShp6bwCyMHESSjAAeWi8XwA6AojoiXT3eig4GTAwnME88SSofOYSTNo6OmSWAG1xAF0i5Ilx5gn3Ont0Ohk8DC0ZQJH3eyA)",
			"score": 28.545137
		},
		{
			"url": "https://api.github.com/repos/microsoft/TypeScript/issues/31029",
			"repository_url": "https://api.github.com/repos/microsoft/TypeScript",
			"labels_url": "https://api.github.com/repos/microsoft/TypeScript/issues/31029/labels{/name}",
			"comments_url": "https://api.github.com/repos/microsoft/TypeScript/issues/31029/comments",
			"events_url": "https://api.github.com/repos/microsoft/TypeScript/issues/31029/events",
			"html_url": "https://github.com/microsoft/TypeScript/pull/31029",
			"id": 435007143,
			"node_id": "MDExOlB1bGxSZXF1ZXN0MjcxODc0MTg0",
			"number": 31029,
			"title": "Fix relations for instantiations of same generic signature",
			"user": {
				"login": "ahejlsberg",
				"id": 4226954,
				"node_id": "MDQ6VXNlcjQyMjY5NTQ=",
				"avatar_url": "https://avatars1.githubusercontent.com/u/4226954?v=4",
				"gravatar_id": "",
				"url": "https://api.github.com/users/ahejlsberg",
				"html_url": "https://github.com/ahejlsberg",
				"followers_url": "https://api.github.com/users/ahejlsberg/followers",
				"following_url": "https://api.github.com/users/ahejlsberg/following{/other_user}",
				"gists_url": "https://api.github.com/users/ahejlsberg/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/ahejlsberg/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/ahejlsberg/subscriptions",
				"organizations_url": "https://api.github.com/users/ahejlsberg/orgs",
				"repos_url": "https://api.github.com/users/ahejlsberg/repos",
				"events_url": "https://api.github.com/users/ahejlsberg/events{/privacy}",
				"received_events_url": "https://api.github.com/users/ahejlsberg/received_events",
				"type": "User",
				"site_admin": false
			},
			"labels": [],
			"state": "open",
			"locked": false,
			"assignee": {
				"login": "ahejlsberg",
				"id": 4226954,
				"node_id": "MDQ6VXNlcjQyMjY5NTQ=",
				"avatar_url": "https://avatars1.githubusercontent.com/u/4226954?v=4",
				"gravatar_id": "",
				"url": "https://api.github.com/users/ahejlsberg",
				"html_url": "https://github.com/ahejlsberg",
				"followers_url": "https://api.github.com/users/ahejlsberg/followers",
				"following_url": "https://api.github.com/users/ahejlsberg/following{/other_user}",
				"gists_url": "https://api.github.com/users/ahejlsberg/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/ahejlsberg/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/ahejlsberg/subscriptions",
				"organizations_url": "https://api.github.com/users/ahejlsberg/orgs",
				"repos_url": "https://api.github.com/users/ahejlsberg/repos",
				"events_url": "https://api.github.com/users/ahejlsberg/events{/privacy}",
				"received_events_url": "https://api.github.com/users/ahejlsberg/received_events",
				"type": "User",
				"site_admin": false
			},
			"assignees": [
				{
					"login": "ahejlsberg",
					"id": 4226954,
					"node_id": "MDQ6VXNlcjQyMjY5NTQ=",
					"avatar_url": "https://avatars1.githubusercontent.com/u/4226954?v=4",
					"gravatar_id": "",
					"url": "https://api.github.com/users/ahejlsberg",
					"html_url": "https://github.com/ahejlsberg",
					"followers_url": "https://api.github.com/users/ahejlsberg/followers",
					"following_url": "https://api.github.com/users/ahejlsberg/following{/other_user}",
					"gists_url": "https://api.github.com/users/ahejlsberg/gists{/gist_id}",
					"starred_url": "https://api.github.com/users/ahejlsberg/starred{/owner}{/repo}",
					"subscriptions_url": "https://api.github.com/users/ahejlsberg/subscriptions",
					"organizations_url": "https://api.github.com/users/ahejlsberg/orgs",
					"repos_url": "https://api.github.com/users/ahejlsberg/repos",
					"events_url": "https://api.github.com/users/ahejlsberg/events{/privacy}",
					"received_events_url": "https://api.github.com/users/ahejlsberg/received_events",
					"type": "User",
					"site_admin": false
				}
			],
			"milestone": {
				"url": "https://api.github.com/repos/microsoft/TypeScript/milestones/100",
				"html_url": "https://github.com/microsoft/TypeScript/milestone/100",
				"labels_url": "https://api.github.com/repos/microsoft/TypeScript/milestones/100/labels",
				"id": 4505789,
				"node_id": "MDk6TWlsZXN0b25lNDUwNTc4OQ==",
				"number": 100,
				"title": "TypeScript 3.6.1",
				"description": "TypeScript 3.6 RC",
				"creator": {
					"login": "DanielRosenwasser",
					"id": 972891,
					"node_id": "MDQ6VXNlcjk3Mjg5MQ==",
					"avatar_url": "https://avatars2.githubusercontent.com/u/972891?v=4",
					"gravatar_id": "",
					"url": "https://api.github.com/users/DanielRosenwasser",
					"html_url": "https://github.com/DanielRosenwasser",
					"followers_url": "https://api.github.com/users/DanielRosenwasser/followers",
					"following_url": "https://api.github.com/users/DanielRosenwasser/following{/other_user}",
					"gists_url": "https://api.github.com/users/DanielRosenwasser/gists{/gist_id}",
					"starred_url": "https://api.github.com/users/DanielRosenwasser/starred{/owner}{/repo}",
					"subscriptions_url": "https://api.github.com/users/DanielRosenwasser/subscriptions",
					"organizations_url": "https://api.github.com/users/DanielRosenwasser/orgs",
					"repos_url": "https://api.github.com/users/DanielRosenwasser/repos",
					"events_url": "https://api.github.com/users/DanielRosenwasser/events{/privacy}",
					"received_events_url": "https://api.github.com/users/DanielRosenwasser/received_events",
					"type": "User",
					"site_admin": false
				},
				"open_issues": 56,
				"closed_issues": 81,
				"state": "open",
				"created_at": "2019-07-19T17:37:17Z",
				"updated_at": "2019-09-23T23:55:20Z",
				"due_on": null,
				"closed_at": null
			},
			"comments": 36,
			"created_at": "2019-04-19T00:22:12Z",
			"updated_at": "2019-07-19T17:38:23Z",
			"closed_at": null,
			"author_association": "MEMBER",
			"pull_request": {
				"url": "https://api.github.com/repos/microsoft/TypeScript/pulls/31029",
				"html_url": "https://github.com/microsoft/TypeScript/pull/31029",
				"diff_url": "https://github.com/microsoft/TypeScript/pull/31029.diff",
				"patch_url": "https://github.com/microsoft/TypeScript/pull/31029.patch"
			},
			"body": "Fixes #31006.",
			"score": 28.10017
		},
		{
			"url": "https://api.github.com/repos/microsoft/TypeScript/issues/26970",
			"repository_url": "https://api.github.com/repos/microsoft/TypeScript",
			"labels_url": "https://api.github.com/repos/microsoft/TypeScript/issues/26970/labels{/name}",
			"comments_url": "https://api.github.com/repos/microsoft/TypeScript/issues/26970/comments",
			"events_url": "https://api.github.com/repos/microsoft/TypeScript/issues/26970/events",
			"html_url": "https://github.com/microsoft/TypeScript/issues/26970",
			"id": 358227422,
			"node_id": "MDU6SXNzdWUzNTgyMjc0MjI=",
			"number": 26970,
			"title": "Inserting intersections with 'Function' while narrowing breaks code",
			"user": {
				"login": "DanielRosenwasser",
				"id": 972891,
				"node_id": "MDQ6VXNlcjk3Mjg5MQ==",
				"avatar_url": "https://avatars2.githubusercontent.com/u/972891?v=4",
				"gravatar_id": "",
				"url": "https://api.github.com/users/DanielRosenwasser",
				"html_url": "https://github.com/DanielRosenwasser",
				"followers_url": "https://api.github.com/users/DanielRosenwasser/followers",
				"following_url": "https://api.github.com/users/DanielRosenwasser/following{/other_user}",
				"gists_url": "https://api.github.com/users/DanielRosenwasser/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/DanielRosenwasser/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/DanielRosenwasser/subscriptions",
				"organizations_url": "https://api.github.com/users/DanielRosenwasser/orgs",
				"repos_url": "https://api.github.com/users/DanielRosenwasser/repos",
				"events_url": "https://api.github.com/users/DanielRosenwasser/events{/privacy}",
				"received_events_url": "https://api.github.com/users/DanielRosenwasser/received_events",
				"type": "User",
				"site_admin": false
			},
			"labels": [
				{
					"id": 373477802,
					"node_id": "MDU6TGFiZWwzNzM0Nzc4MDI=",
					"url": "https://api.github.com/repos/microsoft/TypeScript/labels/Awaiting%20More%20Feedback",
					"name": "Awaiting More Feedback",
					"color": "556677",
					"default": false
				},
				{
					"id": 114834677,
					"node_id": "MDU6TGFiZWwxMTQ4MzQ2Nzc=",
					"url": "https://api.github.com/repos/microsoft/TypeScript/labels/Breaking%20Change",
					"name": "Breaking Change",
					"color": "eb6420",
					"default": false
				},
				{
					"id": 113971155,
					"node_id": "MDU6TGFiZWwxMTM5NzExNTU=",
					"url": "https://api.github.com/repos/microsoft/TypeScript/labels/Suggestion",
					"name": "Suggestion",
					"color": "006b75",
					"default": false
				}
			],
			"state": "open",
			"locked": false,
			"assignee": null,
			"assignees": [],
			"milestone": null,
			"comments": 5,
			"created_at": "2018-09-07T22:14:47Z",
			"updated_at": "2018-12-14T01:01:31Z",
			"closed_at": null,
			"author_association": "MEMBER",
			"body": "@ahejlsberg and I ran into something like this in the RWC. This currently repros on the nightlies.\r\n\r\n```ts\r\nfunction foo(x: Object | (() => string)) {\r\n    if (typeof x === \"function\") {\r\n        // Previously had no errors\r\n        x();\r\n    }\r\n}\r\n```\r\n\r\n**Expected**: No error\r\n\r\n**Actual**:\r\n\r\n```\r\n[ts] Cannot invoke an expression whose type lacks a call signature. Type '(() => string) | (Object & Function)' has no compatible call signatures.\r\n```\r\n\r\nPotentially related to #25243.",
			"score": 27.88558
		},
		{
			"url": "https://api.github.com/repos/microsoft/TypeScript/issues/28950",
			"repository_url": "https://api.github.com/repos/microsoft/TypeScript",
			"labels_url": "https://api.github.com/repos/microsoft/TypeScript/issues/28950/labels{/name}",
			"comments_url": "https://api.github.com/repos/microsoft/TypeScript/issues/28950/comments",
			"events_url": "https://api.github.com/repos/microsoft/TypeScript/issues/28950/events",
			"html_url": "https://github.com/microsoft/TypeScript/pull/28950",
			"id": 389556149,
			"node_id": "MDExOlB1bGxSZXF1ZXN0MjM3NTIwNDcx",
			"number": 28950,
			"title": "Unify semantic differences between produceDiagnostics and non-producing checkers",
			"user": {
				"login": "weswigham",
				"id": 2932786,
				"node_id": "MDQ6VXNlcjI5MzI3ODY=",
				"avatar_url": "https://avatars3.githubusercontent.com/u/2932786?v=4",
				"gravatar_id": "",
				"url": "https://api.github.com/users/weswigham",
				"html_url": "https://github.com/weswigham",
				"followers_url": "https://api.github.com/users/weswigham/followers",
				"following_url": "https://api.github.com/users/weswigham/following{/other_user}",
				"gists_url": "https://api.github.com/users/weswigham/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/weswigham/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/weswigham/subscriptions",
				"organizations_url": "https://api.github.com/users/weswigham/orgs",
				"repos_url": "https://api.github.com/users/weswigham/repos",
				"events_url": "https://api.github.com/users/weswigham/events{/privacy}",
				"received_events_url": "https://api.github.com/users/weswigham/received_events",
				"type": "User",
				"site_admin": false
			},
			"labels": [],
			"state": "open",
			"locked": false,
			"assignee": {
				"login": "weswigham",
				"id": 2932786,
				"node_id": "MDQ6VXNlcjI5MzI3ODY=",
				"avatar_url": "https://avatars3.githubusercontent.com/u/2932786?v=4",
				"gravatar_id": "",
				"url": "https://api.github.com/users/weswigham",
				"html_url": "https://github.com/weswigham",
				"followers_url": "https://api.github.com/users/weswigham/followers",
				"following_url": "https://api.github.com/users/weswigham/following{/other_user}",
				"gists_url": "https://api.github.com/users/weswigham/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/weswigham/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/weswigham/subscriptions",
				"organizations_url": "https://api.github.com/users/weswigham/orgs",
				"repos_url": "https://api.github.com/users/weswigham/repos",
				"events_url": "https://api.github.com/users/weswigham/events{/privacy}",
				"received_events_url": "https://api.github.com/users/weswigham/received_events",
				"type": "User",
				"site_admin": false
			},
			"assignees": [
				{
					"login": "weswigham",
					"id": 2932786,
					"node_id": "MDQ6VXNlcjI5MzI3ODY=",
					"avatar_url": "https://avatars3.githubusercontent.com/u/2932786?v=4",
					"gravatar_id": "",
					"url": "https://api.github.com/users/weswigham",
					"html_url": "https://github.com/weswigham",
					"followers_url": "https://api.github.com/users/weswigham/followers",
					"following_url": "https://api.github.com/users/weswigham/following{/other_user}",
					"gists_url": "https://api.github.com/users/weswigham/gists{/gist_id}",
					"starred_url": "https://api.github.com/users/weswigham/starred{/owner}{/repo}",
					"subscriptions_url": "https://api.github.com/users/weswigham/subscriptions",
					"organizations_url": "https://api.github.com/users/weswigham/orgs",
					"repos_url": "https://api.github.com/users/weswigham/repos",
					"events_url": "https://api.github.com/users/weswigham/events{/privacy}",
					"received_events_url": "https://api.github.com/users/weswigham/received_events",
					"type": "User",
					"site_admin": false
				}
			],
			"milestone": null,
			"comments": 1,
			"created_at": "2018-12-11T01:18:55Z",
			"updated_at": "2019-04-30T15:43:29Z",
			"closed_at": null,
			"author_association": "MEMBER",
			"pull_request": {
				"url": "https://api.github.com/repos/microsoft/TypeScript/pulls/28950",
				"html_url": "https://github.com/microsoft/TypeScript/pull/28950",
				"diff_url": "https://github.com/microsoft/TypeScript/pull/28950.diff",
				"patch_url": "https://github.com/microsoft/TypeScript/pull/28950.patch"
			},
			"body": "To allow them do be able to be used interchangeably for equivalent API results. The core of the change is making it to that we always resolve to an `unknownSignature` on call resolution failure, but also making it possible for the services and `getContextualType` APIs to recover data on what the \"best\" signatures were (without letting the types from those signatures leak into the type heirarchy of the program).\r\n\r\nThe biggest changes are that now when a call has an error quick info shows its return type and arguments as `any`, rather than the return type of the \"best\" signature.",
			"score": 27.86954
		},
		{
			"url": "https://api.github.com/repos/microsoft/TypeScript/issues/30118",
			"repository_url": "https://api.github.com/repos/microsoft/TypeScript",
			"labels_url": "https://api.github.com/repos/microsoft/TypeScript/issues/30118/labels{/name}",
			"comments_url": "https://api.github.com/repos/microsoft/TypeScript/issues/30118/comments",
			"events_url": "https://api.github.com/repos/microsoft/TypeScript/issues/30118/events",
			"html_url": "https://github.com/microsoft/TypeScript/issues/30118",
			"id": 414948524,
			"node_id": "MDU6SXNzdWU0MTQ5NDg1MjQ=",
			"number": 30118,
			"title": "Comparison targets are reversed (regression)",
			"user": {
				"login": "falsandtru",
				"id": 3143368,
				"node_id": "MDQ6VXNlcjMxNDMzNjg=",
				"avatar_url": "https://avatars2.githubusercontent.com/u/3143368?v=4",
				"gravatar_id": "",
				"url": "https://api.github.com/users/falsandtru",
				"html_url": "https://github.com/falsandtru",
				"followers_url": "https://api.github.com/users/falsandtru/followers",
				"following_url": "https://api.github.com/users/falsandtru/following{/other_user}",
				"gists_url": "https://api.github.com/users/falsandtru/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/falsandtru/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/falsandtru/subscriptions",
				"organizations_url": "https://api.github.com/users/falsandtru/orgs",
				"repos_url": "https://api.github.com/users/falsandtru/repos",
				"events_url": "https://api.github.com/users/falsandtru/events{/privacy}",
				"received_events_url": "https://api.github.com/users/falsandtru/received_events",
				"type": "User",
				"site_admin": false
			},
			"labels": [
				{
					"id": 611777722,
					"node_id": "MDU6TGFiZWw2MTE3Nzc3MjI=",
					"url": "https://api.github.com/repos/microsoft/TypeScript/labels/Needs%20Investigation",
					"name": "Needs Investigation",
					"color": "DDDDDD",
					"default": false
				}
			],
			"state": "open",
			"locked": false,
			"assignee": {
				"login": "weswigham",
				"id": 2932786,
				"node_id": "MDQ6VXNlcjI5MzI3ODY=",
				"avatar_url": "https://avatars3.githubusercontent.com/u/2932786?v=4",
				"gravatar_id": "",
				"url": "https://api.github.com/users/weswigham",
				"html_url": "https://github.com/weswigham",
				"followers_url": "https://api.github.com/users/weswigham/followers",
				"following_url": "https://api.github.com/users/weswigham/following{/other_user}",
				"gists_url": "https://api.github.com/users/weswigham/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/weswigham/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/weswigham/subscriptions",
				"organizations_url": "https://api.github.com/users/weswigham/orgs",
				"repos_url": "https://api.github.com/users/weswigham/repos",
				"events_url": "https://api.github.com/users/weswigham/events{/privacy}",
				"received_events_url": "https://api.github.com/users/weswigham/received_events",
				"type": "User",
				"site_admin": false
			},
			"assignees": [
				{
					"login": "weswigham",
					"id": 2932786,
					"node_id": "MDQ6VXNlcjI5MzI3ODY=",
					"avatar_url": "https://avatars3.githubusercontent.com/u/2932786?v=4",
					"gravatar_id": "",
					"url": "https://api.github.com/users/weswigham",
					"html_url": "https://github.com/weswigham",
					"followers_url": "https://api.github.com/users/weswigham/followers",
					"following_url": "https://api.github.com/users/weswigham/following{/other_user}",
					"gists_url": "https://api.github.com/users/weswigham/gists{/gist_id}",
					"starred_url": "https://api.github.com/users/weswigham/starred{/owner}{/repo}",
					"subscriptions_url": "https://api.github.com/users/weswigham/subscriptions",
					"organizations_url": "https://api.github.com/users/weswigham/orgs",
					"repos_url": "https://api.github.com/users/weswigham/repos",
					"events_url": "https://api.github.com/users/weswigham/events{/privacy}",
					"received_events_url": "https://api.github.com/users/weswigham/received_events",
					"type": "User",
					"site_admin": false
				}
			],
			"milestone": null,
			"comments": 5,
			"created_at": "2019-02-27T05:13:56Z",
			"updated_at": "2019-02-28T16:53:37Z",
			"closed_at": null,
			"author_association": "CONTRIBUTOR",
			"body": "@RyanCavanaugh @weswigham @ahejlsberg Caused by #27697\r\n\r\n**TypeScript Version:**  3.4.0-dev.20190222\r\n\r\n<!-- Search terms you tried before logging this (so others can find this issue more easily) -->\r\n**Search Terms:**\r\n\r\n**Code**\r\n\r\nhttps://github.com/falsandtru/spica/blob/v0.0.237/src/supervisor.legacy.ts#L49\r\n\r\n**Expected behavior:**\r\n\r\npass\r\n\r\n**Actual behavior:**\r\n\r\n```\r\nArgument of type 'this' is not assignable to parameter of type 'Supervisor<string, unknown, unknown, unknown>'.\r\n  Type 'Supervisor<N, P, R, S>' is not assignable to type 'Supervisor<string, unknown, unknown, unknown>'.\r\n    Type 'string' is not assignable to type 'N'.ts(2345)\r\n```\r\n\r\nAssignability checking must be N to string, not reverse.\r\n\r\n**Playground Link:** <!-- A link to a TypeScript Playground \"Share\" link which demonstrates this behavior -->\r\n\r\n**Related Issues:** <!-- Did you find other bugs that looked similar? -->\r\n",
			"score": 27.202303
		},
		{
			"url": "https://api.github.com/repos/microsoft/TypeScript/issues/12184",
			"repository_url": "https://api.github.com/repos/microsoft/TypeScript",
			"labels_url": "https://api.github.com/repos/microsoft/TypeScript/issues/12184/labels{/name}",
			"comments_url": "https://api.github.com/repos/microsoft/TypeScript/issues/12184/comments",
			"events_url": "https://api.github.com/repos/microsoft/TypeScript/issues/12184/events",
			"html_url": "https://github.com/microsoft/TypeScript/issues/12184",
			"id": 188865199,
			"node_id": "MDU6SXNzdWUxODg4NjUxOTk=",
			"number": 12184,
			"title": "Indirect type narrowing via `const`",
			"user": {
				"login": "gasi",
				"id": 49583,
				"node_id": "MDQ6VXNlcjQ5NTgz",
				"avatar_url": "https://avatars3.githubusercontent.com/u/49583?v=4",
				"gravatar_id": "",
				"url": "https://api.github.com/users/gasi",
				"html_url": "https://github.com/gasi",
				"followers_url": "https://api.github.com/users/gasi/followers",
				"following_url": "https://api.github.com/users/gasi/following{/other_user}",
				"gists_url": "https://api.github.com/users/gasi/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/gasi/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/gasi/subscriptions",
				"organizations_url": "https://api.github.com/users/gasi/orgs",
				"repos_url": "https://api.github.com/users/gasi/repos",
				"events_url": "https://api.github.com/users/gasi/events{/privacy}",
				"received_events_url": "https://api.github.com/users/gasi/received_events",
				"type": "User",
				"site_admin": false
			},
			"labels": [
				{
					"id": 119463126,
					"node_id": "MDU6TGFiZWwxMTk0NjMxMjY=",
					"url": "https://api.github.com/repos/microsoft/TypeScript/labels/Revisit",
					"name": "Revisit",
					"color": "006b75",
					"default": false
				},
				{
					"id": 113971155,
					"node_id": "MDU6TGFiZWwxMTM5NzExNTU=",
					"url": "https://api.github.com/repos/microsoft/TypeScript/labels/Suggestion",
					"name": "Suggestion",
					"color": "006b75",
					"default": false
				}
			],
			"state": "open",
			"locked": false,
			"assignee": null,
			"assignees": [],
			"milestone": null,
			"comments": 4,
			"created_at": "2016-11-11T22:29:56Z",
			"updated_at": "2019-08-01T19:57:08Z",
			"closed_at": null,
			"author_association": "NONE",
			"body": "<!-- BUGS: Please use this template. -->\r\n\r\n**TypeScript Version:**  2.0.3\r\n\r\n**Code**\r\n\r\n```ts\r\ninterface Square {\r\n    kind: \"square\";\r\n    size: number;\r\n}\r\n\r\ninterface Rectangle {\r\n    kind: \"rectangle\";\r\n    width: number;\r\n    height: number;\r\n}\r\n\r\ntype Shape = Square | Rectangle;\r\n\r\nfunction area(s: Shape) {\r\n\r\n    // // Doesn‚Äôt compile: Using a `const` as a type guard:\r\n    // // `error TS2339: Property 'size' does not exist on type 'Shape'.`\r\n\r\n    // const isSquare = s.kind === 'square';\r\n    // if (isSquare) {\r\n    //     return s.size * s.size;\r\n    // }\r\n\r\n    // // `s` is not narrowed to type `Rectangle`\r\n\r\n    // Compiles: Directly using `s` in the type guard:\r\n    if (s.kind === 'square') {\r\n        return s.size * s.size; // `s` has type `Square`\r\n    }\r\n\r\n    // `s` is narrowed to type `Rectangle`\r\n\r\n    return s.width * s.height;\r\n}\r\n```\r\n\r\n**Expected behavior:**\r\n\r\n`s`‚Äôs type can be narrowed indirectly via a `const`.\r\n\r\n**Actual behavior:** \r\n\r\n`s`‚Äôs type can only be narrowed via direct access.",
			"score": 25.414967
		},
		{
			"url": "https://api.github.com/repos/DefinitelyTyped/DefinitelyTyped/issues/38547",
			"repository_url": "https://api.github.com/repos/DefinitelyTyped/DefinitelyTyped",
			"labels_url": "https://api.github.com/repos/DefinitelyTyped/DefinitelyTyped/issues/38547/labels{/name}",
			"comments_url": "https://api.github.com/repos/DefinitelyTyped/DefinitelyTyped/issues/38547/comments",
			"events_url": "https://api.github.com/repos/DefinitelyTyped/DefinitelyTyped/issues/38547/events",
			"html_url": "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/38547",
			"id": 497203860,
			"node_id": "MDExOlB1bGxSZXF1ZXN0MzIwMzgwMzM3",
			"number": 38547,
			"title": "Modify ramda tests to pass on typescript@next",
			"user": {
				"login": "sandersn",
				"id": 293473,
				"node_id": "MDQ6VXNlcjI5MzQ3Mw==",
				"avatar_url": "https://avatars1.githubusercontent.com/u/293473?v=4",
				"gravatar_id": "",
				"url": "https://api.github.com/users/sandersn",
				"html_url": "https://github.com/sandersn",
				"followers_url": "https://api.github.com/users/sandersn/followers",
				"following_url": "https://api.github.com/users/sandersn/following{/other_user}",
				"gists_url": "https://api.github.com/users/sandersn/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/sandersn/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/sandersn/subscriptions",
				"organizations_url": "https://api.github.com/users/sandersn/orgs",
				"repos_url": "https://api.github.com/users/sandersn/repos",
				"events_url": "https://api.github.com/users/sandersn/events{/privacy}",
				"received_events_url": "https://api.github.com/users/sandersn/received_events",
				"type": "User",
				"site_admin": false
			},
			"labels": [],
			"state": "closed",
			"locked": false,
			"assignee": null,
			"assignees": [],
			"milestone": null,
			"comments": 1,
			"created_at": "2019-09-23T16:31:26Z",
			"updated_at": "2019-09-23T18:37:00Z",
			"closed_at": "2019-09-23T17:00:09Z",
			"author_association": "CONTRIBUTOR",
			"pull_request": {
				"url": "https://api.github.com/repos/DefinitelyTyped/DefinitelyTyped/pulls/38547",
				"html_url": "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/38547",
				"diff_url": "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/38547.diff",
				"patch_url": "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/38547.patch"
			},
			"body": "Contextual signature instantation now catches the fact that thunkify would have produced an `any` during execution and now produces `unknown` instead. This breaks a test that expects the result of `thunkify` to be\r\nnumber. I changed the test to expect `unknown`, which is what `thunkify` produces when compiled with `typescript@next`.\r\n\r\n@pirix-gh from commentary by @ahejlsberg it sounds like `thunkify` has a subtle failing to preserve generics. I expect this test can be restored by addressing that. https://github.com/microsoft/TypeScript/issues/33560",
			"score": 25.022274
		},
		{
			"url": "https://api.github.com/repos/almin/almin/issues/303",
			"repository_url": "https://api.github.com/repos/almin/almin",
			"labels_url": "https://api.github.com/repos/almin/almin/issues/303/labels{/name}",
			"comments_url": "https://api.github.com/repos/almin/almin/issues/303/comments",
			"events_url": "https://api.github.com/repos/almin/almin/issues/303/events",
			"html_url": "https://github.com/almin/almin/issues/303",
			"id": 278834160,
			"node_id": "MDU6SXNzdWUyNzg4MzQxNjA=",
			"number": 303,
			"title": "Docs: Store/State class pattern",
			"user": {
				"login": "azu",
				"id": 19714,
				"node_id": "MDQ6VXNlcjE5NzE0",
				"avatar_url": "https://avatars1.githubusercontent.com/u/19714?v=4",
				"gravatar_id": "",
				"url": "https://api.github.com/users/azu",
				"html_url": "https://github.com/azu",
				"followers_url": "https://api.github.com/users/azu/followers",
				"following_url": "https://api.github.com/users/azu/following{/other_user}",
				"gists_url": "https://api.github.com/users/azu/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/azu/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/azu/subscriptions",
				"organizations_url": "https://api.github.com/users/azu/orgs",
				"repos_url": "https://api.github.com/users/azu/repos",
				"events_url": "https://api.github.com/users/azu/events{/privacy}",
				"received_events_url": "https://api.github.com/users/azu/received_events",
				"type": "User",
				"site_admin": false
			},
			"labels": [
				{
					"id": 567149484,
					"node_id": "MDU6TGFiZWw1NjcxNDk0ODQ=",
					"url": "https://api.github.com/repos/almin/almin/labels/Type:%20Documentation",
					"name": "Type: Documentation",
					"color": "5319e7",
					"default": false
				}
			],
			"state": "open",
			"locked": false,
			"assignee": null,
			"assignees": [],
			"milestone": null,
			"comments": 0,
			"created_at": "2017-12-03T23:33:32Z",
			"updated_at": "2017-12-03T23:33:32Z",
			"closed_at": null,
			"author_association": "MEMBER",
			"body": "We often write following Store and State class pattern.\r\n\r\nIt should be documentation as implementation example.\r\n\r\n```ts\r\nclass MyState {\r\n   update(){}\r\n}\r\n\r\nclass MyStore extends Store<MyState>{\r\n  constructor(){\r\n    super();\r\n    this.state = new MyState();\r\n  }\r\n  receivePayload(){\r\n    this.setState(this.state.update())\r\n  }\r\n  getState(){\r\n    return this.state;\r\n  }\r\n}\r\n```\r\n\r\nExamples:\r\n\r\n- https://github.com/almin/almin/tree/master/examples/shopping-cart/src/stores\r\n\r\nTypeScript enhance this pattern:\r\n\r\n- [Strict property initialization checks in classes by ahejlsberg ¬∑ Pull Request #20075 ¬∑ Microsoft/TypeScript](https://github.com/Microsoft/TypeScript/pull/20075 \"Strict property initialization checks in classes by ahejlsberg ¬∑ Pull Request #20075 ¬∑ Microsoft/TypeScript\")",
			"score": 24.675783
		},
		{
			"url": "https://api.github.com/repos/microsoft/TypeScript/issues/33495",
			"repository_url": "https://api.github.com/repos/microsoft/TypeScript",
			"labels_url": "https://api.github.com/repos/microsoft/TypeScript/issues/33495/labels{/name}",
			"comments_url": "https://api.github.com/repos/microsoft/TypeScript/issues/33495/comments",
			"events_url": "https://api.github.com/repos/microsoft/TypeScript/issues/33495/events",
			"html_url": "https://github.com/microsoft/TypeScript/issues/33495",
			"id": 495355705,
			"node_id": "MDU6SXNzdWU0OTUzNTU3MDU=",
			"number": 33495,
			"title": "never rest type not assignable to complex rest type",
			"user": {
				"login": "jack-williams",
				"id": 4489219,
				"node_id": "MDQ6VXNlcjQ0ODkyMTk=",
				"avatar_url": "https://avatars1.githubusercontent.com/u/4489219?v=4",
				"gravatar_id": "",
				"url": "https://api.github.com/users/jack-williams",
				"html_url": "https://github.com/jack-williams",
				"followers_url": "https://api.github.com/users/jack-williams/followers",
				"following_url": "https://api.github.com/users/jack-williams/following{/other_user}",
				"gists_url": "https://api.github.com/users/jack-williams/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/jack-williams/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/jack-williams/subscriptions",
				"organizations_url": "https://api.github.com/users/jack-williams/orgs",
				"repos_url": "https://api.github.com/users/jack-williams/repos",
				"events_url": "https://api.github.com/users/jack-williams/events{/privacy}",
				"received_events_url": "https://api.github.com/users/jack-williams/received_events",
				"type": "User",
				"site_admin": false
			},
			"labels": [
				{
					"id": 117630560,
					"node_id": "MDU6TGFiZWwxMTc2MzA1NjA=",
					"url": "https://api.github.com/repos/microsoft/TypeScript/labels/In%20Discussion",
					"name": "In Discussion",
					"color": "556b75",
					"default": false
				},
				{
					"id": 113971155,
					"node_id": "MDU6TGFiZWwxMTM5NzExNTU=",
					"url": "https://api.github.com/repos/microsoft/TypeScript/labels/Suggestion",
					"name": "Suggestion",
					"color": "006b75",
					"default": false
				}
			],
			"state": "open",
			"locked": false,
			"assignee": null,
			"assignees": [],
			"milestone": null,
			"comments": 7,
			"created_at": "2019-09-18T17:21:46Z",
			"updated_at": "2019-09-18T22:55:26Z",
			"closed_at": null,
			"author_association": "COLLABORATOR",
			"body": "<!-- üö® STOP üö® ùó¶ùóßùó¢ùó£ üö® ùë∫ùëªùë∂ùë∑ üö®\r\n\r\nHalf of all issues filed here are duplicates, answered in the FAQ, or not appropriate for the bug tracker. Even if you think you've found a *bug*, please read the FAQ first, especially the Common \"Bugs\" That Aren't Bugs section!\r\n\r\nPlease help us by doing the following steps before logging an issue:\r\n  * Search: https://github.com/Microsoft/TypeScript/search?type=Issues\r\n  * Read the FAQ: https://github.com/Microsoft/TypeScript/wiki/FAQ\r\n\r\nPlease fill in the *entire* template below.\r\n-->\r\n\r\n<!-- Please try to reproduce the issue with `typescript@next`. It may have already been fixed. -->\r\n**TypeScript Version:**  3.5.1\r\n\r\n<!-- Search terms you tried before logging this (so others can find this issue more easily) -->\r\n**Search Terms:**\r\n\r\n**Code**\r\n\r\n```ts\r\nfunction foo<T extends any[]>() {\r\n    const fn1: (x: string, ...rest: T) => unknown = (x, ..._) => x;\r\n    const fn2: (...args: never) => unknown = fn1 // error\r\n}\r\n```\r\n\r\n**Expected behavior:**\r\n\r\nAssignment of `fn1` to `fn2` should pass.\r\n\r\n**Actual behavior:**\r\n\r\nAssignment of `fn1` to `fn2` should fails.\r\n\r\n**Playground Link:** [link](https://www.typescriptlang.org/play/#code/GYVwdgxgLglg9mABMOcA8AVRBTAHlbMAEwGdEBDMATwG0BdAPgAoBKRAbwChEfEIESUZGACMALkRNcEwQCcYYAOYAaRADoNs7IIkY2AXgaJwAazBwA7kn2TcqjWoD6Bo7gDc3XvzCDhAJgkmB3JZRRIJMGwAN2xZF2MwM0trYRFOAF8gA)\r\n\r\n**Related Issues:** <!-- Did you find other bugs that looked similar? -->\r\n#33457",
			"score": 24.486393
		},
		{
			"url": "https://api.github.com/repos/microsoft/TypeScript/issues/29468",
			"repository_url": "https://api.github.com/repos/microsoft/TypeScript",
			"labels_url": "https://api.github.com/repos/microsoft/TypeScript/issues/29468/labels{/name}",
			"comments_url": "https://api.github.com/repos/microsoft/TypeScript/issues/29468/comments",
			"events_url": "https://api.github.com/repos/microsoft/TypeScript/issues/29468/events",
			"html_url": "https://github.com/microsoft/TypeScript/pull/29468",
			"id": 400495234,
			"node_id": "MDExOlB1bGxSZXF1ZXN0MjQ1NjcwNjcy",
			"number": 29468,
			"title": "Instantiate `this` in non-super property/element access expressions",
			"user": {
				"login": "weswigham",
				"id": 2932786,
				"node_id": "MDQ6VXNlcjI5MzI3ODY=",
				"avatar_url": "https://avatars3.githubusercontent.com/u/2932786?v=4",
				"gravatar_id": "",
				"url": "https://api.github.com/users/weswigham",
				"html_url": "https://github.com/weswigham",
				"followers_url": "https://api.github.com/users/weswigham/followers",
				"following_url": "https://api.github.com/users/weswigham/following{/other_user}",
				"gists_url": "https://api.github.com/users/weswigham/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/weswigham/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/weswigham/subscriptions",
				"organizations_url": "https://api.github.com/users/weswigham/orgs",
				"repos_url": "https://api.github.com/users/weswigham/repos",
				"events_url": "https://api.github.com/users/weswigham/events{/privacy}",
				"received_events_url": "https://api.github.com/users/weswigham/received_events",
				"type": "User",
				"site_admin": false
			},
			"labels": [],
			"state": "open",
			"locked": false,
			"assignee": {
				"login": "weswigham",
				"id": 2932786,
				"node_id": "MDQ6VXNlcjI5MzI3ODY=",
				"avatar_url": "https://avatars3.githubusercontent.com/u/2932786?v=4",
				"gravatar_id": "",
				"url": "https://api.github.com/users/weswigham",
				"html_url": "https://github.com/weswigham",
				"followers_url": "https://api.github.com/users/weswigham/followers",
				"following_url": "https://api.github.com/users/weswigham/following{/other_user}",
				"gists_url": "https://api.github.com/users/weswigham/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/weswigham/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/weswigham/subscriptions",
				"organizations_url": "https://api.github.com/users/weswigham/orgs",
				"repos_url": "https://api.github.com/users/weswigham/repos",
				"events_url": "https://api.github.com/users/weswigham/events{/privacy}",
				"received_events_url": "https://api.github.com/users/weswigham/received_events",
				"type": "User",
				"site_admin": false
			},
			"assignees": [
				{
					"login": "weswigham",
					"id": 2932786,
					"node_id": "MDQ6VXNlcjI5MzI3ODY=",
					"avatar_url": "https://avatars3.githubusercontent.com/u/2932786?v=4",
					"gravatar_id": "",
					"url": "https://api.github.com/users/weswigham",
					"html_url": "https://github.com/weswigham",
					"followers_url": "https://api.github.com/users/weswigham/followers",
					"following_url": "https://api.github.com/users/weswigham/following{/other_user}",
					"gists_url": "https://api.github.com/users/weswigham/gists{/gist_id}",
					"starred_url": "https://api.github.com/users/weswigham/starred{/owner}{/repo}",
					"subscriptions_url": "https://api.github.com/users/weswigham/subscriptions",
					"organizations_url": "https://api.github.com/users/weswigham/orgs",
					"repos_url": "https://api.github.com/users/weswigham/repos",
					"events_url": "https://api.github.com/users/weswigham/events{/privacy}",
					"received_events_url": "https://api.github.com/users/weswigham/received_events",
					"type": "User",
					"site_admin": false
				}
			],
			"milestone": null,
			"comments": 1,
			"created_at": "2019-01-17T22:43:01Z",
			"updated_at": "2019-04-30T15:43:29Z",
			"closed_at": null,
			"author_association": "MEMBER",
			"pull_request": {
				"url": "https://api.github.com/repos/microsoft/TypeScript/pulls/29468",
				"html_url": "https://github.com/microsoft/TypeScript/pull/29468",
				"diff_url": "https://github.com/microsoft/TypeScript/pull/29468.diff",
				"patch_url": "https://github.com/microsoft/TypeScript/pull/29468.patch"
			},
			"body": "Fixes #28159\r\n\r\n",
			"score": 24.131556
		},
		{
			"url": "https://api.github.com/repos/microsoft/TypeScript/issues/30301",
			"repository_url": "https://api.github.com/repos/microsoft/TypeScript",
			"labels_url": "https://api.github.com/repos/microsoft/TypeScript/issues/30301/labels{/name}",
			"comments_url": "https://api.github.com/repos/microsoft/TypeScript/issues/30301/comments",
			"events_url": "https://api.github.com/repos/microsoft/TypeScript/issues/30301/events",
			"html_url": "https://github.com/microsoft/TypeScript/issues/30301",
			"id": 419133082,
			"node_id": "MDU6SXNzdWU0MTkxMzMwODI=",
			"number": 30301,
			"title": "Regression for omitted lambda parameter with tuple args",
			"user": {
				"login": "ulrichb",
				"id": 388796,
				"node_id": "MDQ6VXNlcjM4ODc5Ng==",
				"avatar_url": "https://avatars3.githubusercontent.com/u/388796?v=4",
				"gravatar_id": "",
				"url": "https://api.github.com/users/ulrichb",
				"html_url": "https://github.com/ulrichb",
				"followers_url": "https://api.github.com/users/ulrichb/followers",
				"following_url": "https://api.github.com/users/ulrichb/following{/other_user}",
				"gists_url": "https://api.github.com/users/ulrichb/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/ulrichb/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/ulrichb/subscriptions",
				"organizations_url": "https://api.github.com/users/ulrichb/orgs",
				"repos_url": "https://api.github.com/users/ulrichb/repos",
				"events_url": "https://api.github.com/users/ulrichb/events{/privacy}",
				"received_events_url": "https://api.github.com/users/ulrichb/received_events",
				"type": "User",
				"site_admin": false
			},
			"labels": [
				{
					"id": 611777722,
					"node_id": "MDU6TGFiZWw2MTE3Nzc3MjI=",
					"url": "https://api.github.com/repos/microsoft/TypeScript/labels/Needs%20Investigation",
					"name": "Needs Investigation",
					"color": "DDDDDD",
					"default": false
				}
			],
			"state": "open",
			"locked": false,
			"assignee": {
				"login": "ahejlsberg",
				"id": 4226954,
				"node_id": "MDQ6VXNlcjQyMjY5NTQ=",
				"avatar_url": "https://avatars1.githubusercontent.com/u/4226954?v=4",
				"gravatar_id": "",
				"url": "https://api.github.com/users/ahejlsberg",
				"html_url": "https://github.com/ahejlsberg",
				"followers_url": "https://api.github.com/users/ahejlsberg/followers",
				"following_url": "https://api.github.com/users/ahejlsberg/following{/other_user}",
				"gists_url": "https://api.github.com/users/ahejlsberg/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/ahejlsberg/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/ahejlsberg/subscriptions",
				"organizations_url": "https://api.github.com/users/ahejlsberg/orgs",
				"repos_url": "https://api.github.com/users/ahejlsberg/repos",
				"events_url": "https://api.github.com/users/ahejlsberg/events{/privacy}",
				"received_events_url": "https://api.github.com/users/ahejlsberg/received_events",
				"type": "User",
				"site_admin": false
			},
			"assignees": [
				{
					"login": "ahejlsberg",
					"id": 4226954,
					"node_id": "MDQ6VXNlcjQyMjY5NTQ=",
					"avatar_url": "https://avatars1.githubusercontent.com/u/4226954?v=4",
					"gravatar_id": "",
					"url": "https://api.github.com/users/ahejlsberg",
					"html_url": "https://github.com/ahejlsberg",
					"followers_url": "https://api.github.com/users/ahejlsberg/followers",
					"following_url": "https://api.github.com/users/ahejlsberg/following{/other_user}",
					"gists_url": "https://api.github.com/users/ahejlsberg/gists{/gist_id}",
					"starred_url": "https://api.github.com/users/ahejlsberg/starred{/owner}{/repo}",
					"subscriptions_url": "https://api.github.com/users/ahejlsberg/subscriptions",
					"organizations_url": "https://api.github.com/users/ahejlsberg/orgs",
					"repos_url": "https://api.github.com/users/ahejlsberg/repos",
					"events_url": "https://api.github.com/users/ahejlsberg/events{/privacy}",
					"received_events_url": "https://api.github.com/users/ahejlsberg/received_events",
					"type": "User",
					"site_admin": false
				}
			],
			"milestone": {
				"url": "https://api.github.com/repos/microsoft/TypeScript/milestones/100",
				"html_url": "https://github.com/microsoft/TypeScript/milestone/100",
				"labels_url": "https://api.github.com/repos/microsoft/TypeScript/milestones/100/labels",
				"id": 4505789,
				"node_id": "MDk6TWlsZXN0b25lNDUwNTc4OQ==",
				"number": 100,
				"title": "TypeScript 3.6.1",
				"description": "TypeScript 3.6 RC",
				"creator": {
					"login": "DanielRosenwasser",
					"id": 972891,
					"node_id": "MDQ6VXNlcjk3Mjg5MQ==",
					"avatar_url": "https://avatars2.githubusercontent.com/u/972891?v=4",
					"gravatar_id": "",
					"url": "https://api.github.com/users/DanielRosenwasser",
					"html_url": "https://github.com/DanielRosenwasser",
					"followers_url": "https://api.github.com/users/DanielRosenwasser/followers",
					"following_url": "https://api.github.com/users/DanielRosenwasser/following{/other_user}",
					"gists_url": "https://api.github.com/users/DanielRosenwasser/gists{/gist_id}",
					"starred_url": "https://api.github.com/users/DanielRosenwasser/starred{/owner}{/repo}",
					"subscriptions_url": "https://api.github.com/users/DanielRosenwasser/subscriptions",
					"organizations_url": "https://api.github.com/users/DanielRosenwasser/orgs",
					"repos_url": "https://api.github.com/users/DanielRosenwasser/repos",
					"events_url": "https://api.github.com/users/DanielRosenwasser/events{/privacy}",
					"received_events_url": "https://api.github.com/users/DanielRosenwasser/received_events",
					"type": "User",
					"site_admin": false
				},
				"open_issues": 56,
				"closed_issues": 81,
				"state": "open",
				"created_at": "2019-07-19T17:37:17Z",
				"updated_at": "2019-09-23T23:55:20Z",
				"due_on": null,
				"closed_at": null
			},
			"comments": 4,
			"created_at": "2019-03-10T01:03:06Z",
			"updated_at": "2019-07-19T17:38:17Z",
			"closed_at": null,
			"author_association": "NONE",
			"body": "<!-- Please try to reproduce the issue with `typescript@next`. It may have already been fixed. -->\r\n**TypeScript Version:**  3.4.0-dev.20190309\r\n\r\n<!-- Search terms you tried before logging this (so others can find this issue more easily) -->\r\n**Search Terms:** 3.4 tuple lambda\r\n\r\n**Code**\r\n\r\nThe following snippet compiles fine in TS 3.3 whereas it emits an error in TS 3.4.\r\n\r\n```ts\r\ntype MyTupleItem = {};\r\ntype MyTuple = [MyTupleItem, ...MyTupleItem[]];\r\n\r\ntype GenericFunction<T extends MyTuple> = (...fromArgs: T) => void;\r\n\r\nclass GenericClass<T extends MyTuple> {\r\n    from: T | undefined;\r\n}\r\n\r\nfunction createClass<T extends MyTuple>(f: GenericFunction<T>): GenericClass<T> {\r\n    return new GenericClass<T>(/* ... use f */);\r\n}\r\n\r\nfunction consumeClass(c: GenericClass<[string, boolean]>) { }\r\n\r\n// ERROR:\r\nconsumeClass(createClass(str => console.log(str.length)));\r\n\r\n// WORKS:\r\nconsumeClass(createClass((str, _unused_num) => console.log(str.length)));\r\n```\r\n\r\n**Expected behavior:**\r\n\r\nNo compile error.\r\n\r\n**Actual behavior:**\r\n\r\n```plain\r\n>npx tsc TypeScriptIssueNext.ts\r\nTypeScriptIssueNext.ts:18:14 - error TS2345: Argument of type 'GenericClass<[string]>' is not assignable to parameter of type 'GenericClass<[string, boolean]>'.\r\n  Property '1' is missing in type '[string]' but required in type '[string, boolean]'.\r\n\r\n18 consumeClass(createClass(str => console.log(str.length)));\r\n                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n```\r\n\r\n**Playground Link:** [Link](https://www.typescriptlang.org/play/#src=type%20MyTupleItem%20%3D%20%7B%7D%3B%0Atype%20MyTuple%20%3D%20%5BMyTupleItem%2C%20...MyTupleItem%5B%5D%5D%3B%0A%0Atype%20GenericFunction%3CT%20extends%20MyTuple%3E%20%3D%20(...fromArgs%3A%20T)%20%3D%3E%20void%3B%0A%0Aclass%20GenericClass%3CT%20extends%20MyTuple%3E%20%7B%0A%20%20%20%20from%3A%20T%20%7C%20undefined%3B%0A%7D%0A%0Afunction%20createClass%3CT%20extends%20MyTuple%3E(f%3A%20GenericFunction%3CT%3E)%3A%20GenericClass%3CT%3E%20%7B%0A%20%20%20%20return%20new%20GenericClass%3CT%3E(%2F*%20...%20use%20f%20*%2F)%3B%0A%7D%0A%0Afunction%20consumeClass(c%3A%20GenericClass%3C%5Bstring%2C%20boolean%5D%3E)%20%7B%20%7D%0A%0A%2F%2F%20ERROR%3A%0AconsumeClass(createClass(str%20%3D%3E%20console.log(str.length)))%3B%0A%0A%2F%2F%20WORKS%3A%0AconsumeClass(createClass((str%2C%20num)%20%3D%3E%20console.log(str.length)))%3B%0A)",
			"score": 23.896631
		},
		{
			"url": "https://api.github.com/repos/microsoft/TypeScript/issues/18805",
			"repository_url": "https://api.github.com/repos/microsoft/TypeScript",
			"labels_url": "https://api.github.com/repos/microsoft/TypeScript/issues/18805/labels{/name}",
			"comments_url": "https://api.github.com/repos/microsoft/TypeScript/issues/18805/comments",
			"events_url": "https://api.github.com/repos/microsoft/TypeScript/issues/18805/events",
			"html_url": "https://github.com/microsoft/TypeScript/issues/18805",
			"id": 261090956,
			"node_id": "MDU6SXNzdWUyNjEwOTA5NTY=",
			"number": 18805,
			"title": "Over-eager inference with ThisType & homomorphic mapped types",
			"user": {
				"login": "DanielRosenwasser",
				"id": 972891,
				"node_id": "MDQ6VXNlcjk3Mjg5MQ==",
				"avatar_url": "https://avatars2.githubusercontent.com/u/972891?v=4",
				"gravatar_id": "",
				"url": "https://api.github.com/users/DanielRosenwasser",
				"html_url": "https://github.com/DanielRosenwasser",
				"followers_url": "https://api.github.com/users/DanielRosenwasser/followers",
				"following_url": "https://api.github.com/users/DanielRosenwasser/following{/other_user}",
				"gists_url": "https://api.github.com/users/DanielRosenwasser/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/DanielRosenwasser/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/DanielRosenwasser/subscriptions",
				"organizations_url": "https://api.github.com/users/DanielRosenwasser/orgs",
				"repos_url": "https://api.github.com/users/DanielRosenwasser/repos",
				"events_url": "https://api.github.com/users/DanielRosenwasser/events{/privacy}",
				"received_events_url": "https://api.github.com/users/DanielRosenwasser/received_events",
				"type": "User",
				"site_admin": false
			},
			"labels": [
				{
					"id": 114201833,
					"node_id": "MDU6TGFiZWwxMTQyMDE4MzM=",
					"url": "https://api.github.com/repos/microsoft/TypeScript/labels/Needs%20Proposal",
					"name": "Needs Proposal",
					"color": "556b75",
					"default": false
				},
				{
					"id": 113971155,
					"node_id": "MDU6TGFiZWwxMTM5NzExNTU=",
					"url": "https://api.github.com/repos/microsoft/TypeScript/labels/Suggestion",
					"name": "Suggestion",
					"color": "006b75",
					"default": false
				}
			],
			"state": "open",
			"locked": false,
			"assignee": null,
			"assignees": [],
			"milestone": null,
			"comments": 1,
			"created_at": "2017-09-27T19:29:18Z",
			"updated_at": "2018-07-19T23:59:23Z",
			"closed_at": null,
			"author_association": "MEMBER",
			"body": "@ahejlsberg and I have spoken about this a few times offline, but @bterlson was asking if we had an issue tracking this problem.\r\n\r\nWe've been working with Vue's API to try to give users a better experience. Unfortunately, this is still a very easy gotcha to fall into.\r\n\r\nAs a boiled down case, try running the following example with `noImplicitAny` and `noImplicitThis`:\r\n\r\n```ts\r\ntype ComputedOf<T> = {\r\n    [K in keyof T]: () => T[K]\r\n}\r\n\r\ndeclare function foo<P, C>(options: {\r\n    props: P,\r\n    computed: ComputedOf<C>\r\n} & ThisType<P & C>): void;\r\n\r\nfoo({\r\n    props: { x: 10, y: 20 },\r\n    computed: {\r\n        bar() {\r\n            return this.x;\r\n        }\r\n    }\r\n});\r\n```\r\n\r\nHere, you'll get a problem on `bar` and on the `x` in `this.x`, you'll get:\r\n\r\n>'bar' implicitly has return type 'any' because it does not have a return type annotation and is referenced directly or indirectly in one of its return expressions.\r\n\r\n> Property 'x' does not exist on type '{ bar(): any; }'.\r\n\r\nThe problem surfaces as soon as any value on `this` is used in producing the return value of a computed method.\r\n\r\nI forget exactly why this occurs, but it has to do with circularities in trying to draw inferences to `C` which is wrapped in a homomorphic mapped type. @ahejlsberg can fill me in here.\r\n\r\nThe solution for users is to add a return type annotation to `bar` which is not obvious, but it prevents type argument inference from type-checking the internals of the method, and avoids the circularity problem. Ideally, users should not have to think about this.",
			"score": 22.912844
		},
		{
			"url": "https://api.github.com/repos/microsoft/TypeScript/issues/32100",
			"repository_url": "https://api.github.com/repos/microsoft/TypeScript",
			"labels_url": "https://api.github.com/repos/microsoft/TypeScript/issues/32100/labels{/name}",
			"comments_url": "https://api.github.com/repos/microsoft/TypeScript/issues/32100/comments",
			"events_url": "https://api.github.com/repos/microsoft/TypeScript/issues/32100/events",
			"html_url": "https://github.com/microsoft/TypeScript/pull/32100",
			"id": 460806902,
			"node_id": "MDExOlB1bGxSZXF1ZXN0MjkxODU3MDM3",
			"number": 32100,
			"title": "Fixes #30507",
			"user": {
				"login": "timsuchanek",
				"id": 1094804,
				"node_id": "MDQ6VXNlcjEwOTQ4MDQ=",
				"avatar_url": "https://avatars1.githubusercontent.com/u/1094804?v=4",
				"gravatar_id": "",
				"url": "https://api.github.com/users/timsuchanek",
				"html_url": "https://github.com/timsuchanek",
				"followers_url": "https://api.github.com/users/timsuchanek/followers",
				"following_url": "https://api.github.com/users/timsuchanek/following{/other_user}",
				"gists_url": "https://api.github.com/users/timsuchanek/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/timsuchanek/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/timsuchanek/subscriptions",
				"organizations_url": "https://api.github.com/users/timsuchanek/orgs",
				"repos_url": "https://api.github.com/users/timsuchanek/repos",
				"events_url": "https://api.github.com/users/timsuchanek/events{/privacy}",
				"received_events_url": "https://api.github.com/users/timsuchanek/received_events",
				"type": "User",
				"site_admin": false
			},
			"labels": [],
			"state": "open",
			"locked": false,
			"assignee": {
				"login": "weswigham",
				"id": 2932786,
				"node_id": "MDQ6VXNlcjI5MzI3ODY=",
				"avatar_url": "https://avatars3.githubusercontent.com/u/2932786?v=4",
				"gravatar_id": "",
				"url": "https://api.github.com/users/weswigham",
				"html_url": "https://github.com/weswigham",
				"followers_url": "https://api.github.com/users/weswigham/followers",
				"following_url": "https://api.github.com/users/weswigham/following{/other_user}",
				"gists_url": "https://api.github.com/users/weswigham/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/weswigham/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/weswigham/subscriptions",
				"organizations_url": "https://api.github.com/users/weswigham/orgs",
				"repos_url": "https://api.github.com/users/weswigham/repos",
				"events_url": "https://api.github.com/users/weswigham/events{/privacy}",
				"received_events_url": "https://api.github.com/users/weswigham/received_events",
				"type": "User",
				"site_admin": false
			},
			"assignees": [
				{
					"login": "weswigham",
					"id": 2932786,
					"node_id": "MDQ6VXNlcjI5MzI3ODY=",
					"avatar_url": "https://avatars3.githubusercontent.com/u/2932786?v=4",
					"gravatar_id": "",
					"url": "https://api.github.com/users/weswigham",
					"html_url": "https://github.com/weswigham",
					"followers_url": "https://api.github.com/users/weswigham/followers",
					"following_url": "https://api.github.com/users/weswigham/following{/other_user}",
					"gists_url": "https://api.github.com/users/weswigham/gists{/gist_id}",
					"starred_url": "https://api.github.com/users/weswigham/starred{/owner}{/repo}",
					"subscriptions_url": "https://api.github.com/users/weswigham/subscriptions",
					"organizations_url": "https://api.github.com/users/weswigham/orgs",
					"repos_url": "https://api.github.com/users/weswigham/repos",
					"events_url": "https://api.github.com/users/weswigham/events{/privacy}",
					"received_events_url": "https://api.github.com/users/weswigham/received_events",
					"type": "User",
					"site_admin": false
				},
				{
					"login": "andrewbranch",
					"id": 3277153,
					"node_id": "MDQ6VXNlcjMyNzcxNTM=",
					"avatar_url": "https://avatars0.githubusercontent.com/u/3277153?v=4",
					"gravatar_id": "",
					"url": "https://api.github.com/users/andrewbranch",
					"html_url": "https://github.com/andrewbranch",
					"followers_url": "https://api.github.com/users/andrewbranch/followers",
					"following_url": "https://api.github.com/users/andrewbranch/following{/other_user}",
					"gists_url": "https://api.github.com/users/andrewbranch/gists{/gist_id}",
					"starred_url": "https://api.github.com/users/andrewbranch/starred{/owner}{/repo}",
					"subscriptions_url": "https://api.github.com/users/andrewbranch/subscriptions",
					"organizations_url": "https://api.github.com/users/andrewbranch/orgs",
					"repos_url": "https://api.github.com/users/andrewbranch/repos",
					"events_url": "https://api.github.com/users/andrewbranch/events{/privacy}",
					"received_events_url": "https://api.github.com/users/andrewbranch/received_events",
					"type": "User",
					"site_admin": false
				},
				{
					"login": "ahejlsberg",
					"id": 4226954,
					"node_id": "MDQ6VXNlcjQyMjY5NTQ=",
					"avatar_url": "https://avatars1.githubusercontent.com/u/4226954?v=4",
					"gravatar_id": "",
					"url": "https://api.github.com/users/ahejlsberg",
					"html_url": "https://github.com/ahejlsberg",
					"followers_url": "https://api.github.com/users/ahejlsberg/followers",
					"following_url": "https://api.github.com/users/ahejlsberg/following{/other_user}",
					"gists_url": "https://api.github.com/users/ahejlsberg/gists{/gist_id}",
					"starred_url": "https://api.github.com/users/ahejlsberg/starred{/owner}{/repo}",
					"subscriptions_url": "https://api.github.com/users/ahejlsberg/subscriptions",
					"organizations_url": "https://api.github.com/users/ahejlsberg/orgs",
					"repos_url": "https://api.github.com/users/ahejlsberg/repos",
					"events_url": "https://api.github.com/users/ahejlsberg/events{/privacy}",
					"received_events_url": "https://api.github.com/users/ahejlsberg/received_events",
					"type": "User",
					"site_admin": false
				}
			],
			"milestone": null,
			"comments": 15,
			"created_at": "2019-06-26T07:29:29Z",
			"updated_at": "2019-09-25T12:14:12Z",
			"closed_at": null,
			"author_association": "NONE",
			"pull_request": {
				"url": "https://api.github.com/repos/microsoft/TypeScript/pulls/32100",
				"html_url": "https://github.com/microsoft/TypeScript/pull/32100",
				"diff_url": "https://github.com/microsoft/TypeScript/pull/32100.diff",
				"patch_url": "https://github.com/microsoft/TypeScript/pull/32100.patch"
			},
			"body": "<!--\r\nThank you for submitting a pull request!\r\n\r\nPlease verify that:\r\n* [ ] There is an associated issue in the `Backlog` milestone (**required**)\r\n* [ ] Code is up-to-date with the `master` branch\r\n* [ ] You've successfully run `gulp runtests` locally\r\n* [ ] There are new or updated unit tests validating the change\r\n\r\nRefer to CONTRIBUTING.MD for more details.\r\n  https://github.com/Microsoft/TypeScript/blob/master/CONTRIBUTING.md\r\n-->\r\n\r\nFixes https://github.com/microsoft/TypeScript/issues/30507\r\n\r\nI saw, that when the object expression has incorrect properties, that don't exist on the type, the autocompletion works fine.\r\nThe decision, if the constraint type should be taken as the default or not is being made in [checker.ts:15733](https://github.com/microsoft/TypeScript/compare/master...timsuchanek:genericObjectExpressionCompletion?expand=1#diff-c3ed224e4daa84352f7f1abcd23e8ccaR15733) and as this is about 10 function calls deep when coming from https://github.com/microsoft/TypeScript/blob/master/src/services/completions.ts#L1457 I had to introduce a parameter in all these functions that can be passed down.\r\nI saw, that there was already a `ContextFlags` type, which can be passed in to `getContextualType`, so I extended it and to make it accessible from the `completions.ts`, I had to add it to the `TSChecker` types in https://github.com/microsoft/TypeScript/compare/master...timsuchanek:genericObjectExpressionCompletion?expand=1#diff-4b8bd1eea29904f1be39cd864e1a45c0R3335\r\n\r\nLet me know if I could have achieved this in a different way, but after many hours of debugging, this looked like the \"most minimal\" change to achieve the goal.\r\n\r\nI added 2 tests, all tests are green. ",
			"score": 22.851593
		},
		{
			"url": "https://api.github.com/repos/nodejs/roadmap/issues/13",
			"repository_url": "https://api.github.com/repos/nodejs/roadmap",
			"labels_url": "https://api.github.com/repos/nodejs/roadmap/issues/13/labels{/name}",
			"comments_url": "https://api.github.com/repos/nodejs/roadmap/issues/13/comments",
			"events_url": "https://api.github.com/repos/nodejs/roadmap/issues/13/events",
			"html_url": "https://github.com/nodejs/roadmap/issues/13",
			"id": 55388686,
			"node_id": "MDU6SXNzdWU1NTM4ODY4Ng==",
			"number": 13,
			"title": "Gathering feedback from companies.",
			"user": {
				"login": "mikeal",
				"id": 579,
				"node_id": "MDQ6VXNlcjU3OQ==",
				"avatar_url": "https://avatars2.githubusercontent.com/u/579?v=4",
				"gravatar_id": "",
				"url": "https://api.github.com/users/mikeal",
				"html_url": "https://github.com/mikeal",
				"followers_url": "https://api.github.com/users/mikeal/followers",
				"following_url": "https://api.github.com/users/mikeal/following{/other_user}",
				"gists_url": "https://api.github.com/users/mikeal/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/mikeal/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/mikeal/subscriptions",
				"organizations_url": "https://api.github.com/users/mikeal/orgs",
				"repos_url": "https://api.github.com/users/mikeal/repos",
				"events_url": "https://api.github.com/users/mikeal/events{/privacy}",
				"received_events_url": "https://api.github.com/users/mikeal/received_events",
				"type": "User",
				"site_admin": false
			},
			"labels": [],
			"state": "open",
			"locked": true,
			"assignee": null,
			"assignees": [],
			"milestone": null,
			"comments": 16,
			"created_at": "2015-01-24T23:17:24Z",
			"updated_at": "2015-03-16T22:42:55Z",
			"closed_at": null,
			"author_association": "CONTRIBUTOR",
			"body": "We have a lot of great feedback from developers and community members and I'm confident that we can continue to find even better ways of continuing that effort to create a living roadmap. While some of the feedback we're getting is about production use and usage within companies I don't think the public calls for feedback do a good enough job at getting information about problems at large production use.\n\nI'd like to being seeking out large scale use cases and interviewing people there about their biggest problems. Now, the problem here is that I don't think they will be honest if their feedback, along with their name and company affiliation, is made public. These people care about Node, they don't want to disparage it, and the last thing we want as a project is some silly tech press article about \"companies unhappy with Node.\"\n\nThe best way to do this might be to get a list of companies together we want to talk to and conduct interviews, then summarize that feedback in to a generalized document about all the companies we spoke to so that no individual complaint or problem can be directly associated with a company or individual.\n## Initial List\n### Enterprises\n- [ ] Netflix\n- [ ] Walmart\n- [ ] Uber\n- [ ] Paypal\n- [ ] IBM\n- [ ] Google\n- [ ] Yahoo\n- [ ] Microsoft\n- [ ] Alibaba\n### Startups\n- [ ] Automattic\n- [ ] Storify\n- [ ] Voxer\n- [ ] New Relic\n- [ ] Nodejitsu\n- [ ] Engine Yard\n- [ ] Heroku\n- [ ] AppNeta\n- [ ] Skycatch\n- [ ] Mapbox\n### Consulting and Services\n\nFocusing on companies working big Node users as a proxy for feedback.\n- [ ] Nearform\n- [ ] Strongloop\n- [ ] NPM\n- [ ] Node Source\n- [ ] Emerging Technology Advisors\n- [ ] andYet\n- [ ] Modulus\n",
			"score": 22.598717
		},
		{
			"url": "https://api.github.com/repos/microsoft/TypeScript/issues/31548",
			"repository_url": "https://api.github.com/repos/microsoft/TypeScript",
			"labels_url": "https://api.github.com/repos/microsoft/TypeScript/issues/31548/labels{/name}",
			"comments_url": "https://api.github.com/repos/microsoft/TypeScript/issues/31548/comments",
			"events_url": "https://api.github.com/repos/microsoft/TypeScript/issues/31548/events",
			"html_url": "https://github.com/microsoft/TypeScript/issues/31548",
			"id": 447412695,
			"node_id": "MDU6SXNzdWU0NDc0MTI2OTU=",
			"number": 31548,
			"title": "Better support for NoSubstitutionTemplateLiteral in checker",
			"user": {
				"login": "IllusionMH",
				"id": 1312662,
				"node_id": "MDQ6VXNlcjEzMTI2NjI=",
				"avatar_url": "https://avatars1.githubusercontent.com/u/1312662?v=4",
				"gravatar_id": "",
				"url": "https://api.github.com/users/IllusionMH",
				"html_url": "https://github.com/IllusionMH",
				"followers_url": "https://api.github.com/users/IllusionMH/followers",
				"following_url": "https://api.github.com/users/IllusionMH/following{/other_user}",
				"gists_url": "https://api.github.com/users/IllusionMH/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/IllusionMH/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/IllusionMH/subscriptions",
				"organizations_url": "https://api.github.com/users/IllusionMH/orgs",
				"repos_url": "https://api.github.com/users/IllusionMH/repos",
				"events_url": "https://api.github.com/users/IllusionMH/events{/privacy}",
				"received_events_url": "https://api.github.com/users/IllusionMH/received_events",
				"type": "User",
				"site_admin": false
			},
			"labels": [
				{
					"id": 113970366,
					"node_id": "MDU6TGFiZWwxMTM5NzAzNjY=",
					"url": "https://api.github.com/repos/microsoft/TypeScript/labels/Bug",
					"name": "Bug",
					"color": "e11d21",
					"default": false
				}
			],
			"state": "open",
			"locked": false,
			"assignee": null,
			"assignees": [],
			"milestone": {
				"url": "https://api.github.com/repos/microsoft/TypeScript/milestones/29",
				"html_url": "https://github.com/microsoft/TypeScript/milestone/29",
				"labels_url": "https://api.github.com/repos/microsoft/TypeScript/milestones/29/labels",
				"id": 1973940,
				"node_id": "MDk6TWlsZXN0b25lMTk3Mzk0MA==",
				"number": 29,
				"title": "Backlog",
				"description": "",
				"creator": {
					"login": "mhegazy",
					"id": 8000722,
					"node_id": "MDQ6VXNlcjgwMDA3MjI=",
					"avatar_url": "https://avatars3.githubusercontent.com/u/8000722?v=4",
					"gravatar_id": "",
					"url": "https://api.github.com/users/mhegazy",
					"html_url": "https://github.com/mhegazy",
					"followers_url": "https://api.github.com/users/mhegazy/followers",
					"following_url": "https://api.github.com/users/mhegazy/following{/other_user}",
					"gists_url": "https://api.github.com/users/mhegazy/gists{/gist_id}",
					"starred_url": "https://api.github.com/users/mhegazy/starred{/owner}{/repo}",
					"subscriptions_url": "https://api.github.com/users/mhegazy/subscriptions",
					"organizations_url": "https://api.github.com/users/mhegazy/orgs",
					"repos_url": "https://api.github.com/users/mhegazy/repos",
					"events_url": "https://api.github.com/users/mhegazy/events{/privacy}",
					"received_events_url": "https://api.github.com/users/mhegazy/received_events",
					"type": "User",
					"site_admin": false
				},
				"open_issues": 1482,
				"closed_issues": 189,
				"state": "open",
				"created_at": "2016-08-31T00:21:08Z",
				"updated_at": "2019-09-23T21:28:32Z",
				"due_on": null,
				"closed_at": null
			},
			"comments": 2,
			"created_at": "2019-05-23T01:46:31Z",
			"updated_at": "2019-06-13T14:55:56Z",
			"closed_at": null,
			"author_association": "CONTRIBUTOR",
			"body": "<!-- üö® STOP üö® ùó¶ùóßùó¢ùó£ üö® ùë∫ùëªùë∂ùë∑ üö®\r\n\r\nHalf of all issues filed here are duplicates, answered in the FAQ, or not appropriate for the bug tracker. Please read the FAQ first, especially the \"Common Feature Requests\" section.\r\n\r\n-->\r\n\r\n## Search Terms\r\n<!-- List of keywords you searched for before creating this issue. Write them down here so that others can find this suggestion more easily -->\r\ntemplate enum, template discriminated, template literals\r\n\r\n\r\n## Suggestion\r\n\r\nFollowing  https://github.com/microsoft/TypeScript/pull/31042#issuecomment-486878451\r\n\r\nI've reviewed functions that has checks for `StringLiteral`s, but checks for `NoSubstitutionTemplateLiteral` are missing or logic differs.\r\nI've prepared code for all places below (except \"Out of scope\" sections) and most of the tests cases are ready for PR.\r\n\r\nCould you please check cases below and approve proposed changes?\r\n\r\nPlease let me know if you have other examples where template literals behaves differently.\r\n\r\n<!-- ---------------------- -->\r\n### 1. Support template literals in enum declaration\r\n\r\nOriginal issue: #30962\r\n\r\nOriginal PR: #31042\r\n\r\n[Example](http://www.typescriptlang.org/play/index.html#src=const%20expr%20%3D%20'1'%3B%0D%0A%0D%0Aenum%20Example%20%7B%0D%0A%20%20%20%20a%20%3D%20'a'%2C%0D%0A%20%20%20%20b%20%3D%20%60b%60%2C%0D%0A%20%20%20%20c%20%3D%20%60c%60%20%2B%20%60c%60%2C%0D%0A%20%20%20%20d%20%3D%20%60a%24%7Bexpr%7Db%60%0D%0A%7D)\r\n\r\n**Result:**\r\n\r\n```ts\r\nconst expr = '1';\r\n\r\nenum Example {\r\n    a = 'a',\r\n    b = `b`, // Works\r\n    c = `c` + `c`, // Works\r\n    d = `a${expr}b` // Still error\r\n}\r\n```\r\n\r\n**Related functions:**\r\n1. `isStringConcatExpression` (in `checker.ts`)\r\n1. `isLiteralEnumMember`  (in `checker.ts`)\r\n1. `getEnumKind`  (in `checker.ts`)\r\n1. `evaluate` (inside of `computeConstanValue`, in `checker.ts`)\r\n\r\n<!-- ---------------------- -->\r\n### 2. Support template literals in enum properties access\r\n\r\n[Example](http://www.typescriptlang.org/play/index.html#src=const%20enum%20Test%20%7B%0D%0A%20%20%20%20a%20%3D%201%2C%0D%0A%20%20%20%20b%20%3D%202%2C%0D%0A%20%20%20%20c%20%3D%203%0D%0A%7D%0D%0A%0D%0Aconst%20enum%20Test%20%7B%0D%0A%20%20%20%20d%20%3D%20Test.a%2C%20%20%20%20%2F%2F%20OK%2C%20%20%20%20Test.d%20%3D%201%0D%0A%20%20%20%20e%20%3D%20Test%5B'b'%5D%2C%20%2F%2F%20OK%2C%20%20%20%20Test.e%20%3D%202%0D%0A%20%20%20%20f%20%3D%20Test%5B%60c%60%5D%20%20%2F%2F%20Error%2C%20Test.f%20(no%20value)%0D%0A%7D%0D%0A%0D%0Aconst%20a%20%3D%20Test.a%3B%20%20%20%20%2F%2F%20OK%2C%20%20%20%20typeof%20a%20%3D%3D%20Test%0D%0Aconst%20b%20%3D%20Test%5B'b'%5D%3B%20%2F%2F%20OK%2C%20%20%20%20typeof%20b%20%3D%3D%20Test%0D%0Aconst%20c%20%3D%20Test%5B%60c%60%5D%3B%20%2F%2F%20Error%2C%20typeof%20c%20%3D%3D%20any%0D%0A%0D%0Aenum%20Example%20%7B%0D%0A%20%20%20%20a%20%3D%2010%2C%0D%0A%20%20%20%20b%20%3D%20Example%5B'a'%5D%2C%20%2F%2F%20OK%2C%20%20%20%20%20%20%20Example.b%20%3D%2010%0D%0A%20%20%20%20c%20%3D%20Example%5B%60a%60%5D%20%20%2F%2F%20No%20error%2C%20Example.c%20(no%20value)%0D%0A%7D%0D%0A)\r\n\r\n**Result:**\r\n\r\n```ts\r\nconst enum Test {\r\n    a = 1,\r\n    b = 2,\r\n    c = 3\r\n}\r\n\r\nconst enum Test {\r\n    d = Test.a,    // OK, Test.d = 1\r\n    e = Test['b'], // OK, Test.e = 2\r\n    f = Test[`c`]  // OK, Test.f = 3\r\n}\r\n\r\nconst a = Test.a;    // OK, typeof a == Test\r\nconst b = Test['b']; // OK, typeof b == Test\r\nconst c = Test[`c`]; // OK, typeof c == Test\r\n\r\nenum Example {\r\n    a = 10,\r\n    b = Example['a'], // OK, Example.b = 10\r\n    c = Example[`a`]  // OK, Example.c = 10 (correct value now)\r\n}\r\n```\r\n\r\n**Related functions:**\r\n\r\n1. `isConstantMemberAccess`  (in `checker.ts`)\r\n1. `checkIndexedAccess`  (in `checker.ts`)\r\n\r\n<!-- ---------------------- -->\r\n\r\n### 3. Support template literals in switch statements with `typeof` condition\r\n\r\n[Example](http://www.typescriptlang.org/play/index.html#src=function%20errorOnValue(val%3A%20never)%3A%20never%20%7B%0D%0A%20%20%20%20throw%20new%20Error(%60Unexpected%20value%3A%20%24%7Bval%7D%60)%3B%0D%0A%7D%0D%0A%0D%0Afunction%20test(value%3A%20number%20%7C%20string)%20%7B%0D%0A%20%20%20%20switch%20(typeof%20value)%20%7B%0D%0A%20%20%20%20%20%20%20%20case%20'number'%3A%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20return%20'num'%3B%0D%0A%20%20%20%20%20%20%20%20case%20%60string%60%3A%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20return%20'str'%3B%0D%0A%0D%0A%20%20%20%20%20%20%20%20default%3A%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20return%20errorOnValue(value)%3B%20%2F%2F%20Type%20'string'%20is%20not%20assignable%20to%20type%20'never'.%0D%0A%20%20%20%20%7D%0D%0A%7D)\r\n\r\n**Result:**\r\n\r\n```ts\r\nfunction errorOnValue(val: never): never {\r\n    throw new Error(`Unexpected value: ${val}`);\r\n}\r\n\r\nfunction test(value: number | string) {\r\n    switch (typeof value) {\r\n        case \"number\":\r\n            return 'num';\r\n        case `string`:\r\n            return 'str';\r\n\r\n        default:\r\n            return errorOnValue(value); // value will have type `never` and no error here\r\n    }\r\n}\r\n```\r\n\r\n**Related functions:**\r\n\r\n1. `getSwitchClauseTypeOfWitnesses` (in `checker.ts`)\r\n\r\n<!-- ---------------------- -->\r\n\r\n### 4. Support template literals in `const` initializers inside an ambient declarations\r\n\r\n[Example](http://www.typescriptlang.org/play/index.html#src=declare%20module%20Example%20%7B%0D%0A%20%20%20%20enum%20Test%20%7B%0D%0A%20%20%20%20%20%20%20%20a%20%3D%20'1'%2C%0D%0A%20%20%20%20%20%20%20%20b%20%3D%20'2'%2C%0D%0A%20%20%20%20%20%20%20%20c%20%3D%20'3'%0D%0A%20%20%20%20%7D%0D%0A%0D%0A%20%20%20%20export%20const%20a%20%3D%20'string'%3B%0D%0A%20%20%20%20export%20const%20b%20%3D%20%60template%60%3B%20%2F%2F%20Error%0D%0A%0D%0A%20%20%20%20export%20const%20c%20%3D%20Test.a%3B%0D%0A%20%20%20%20export%20const%20d%20%3D%20Test%5B'b'%5D%3B%0D%0A%20%20%20%20export%20const%20e%20%3D%20Test%5B%60c%60%5D%3B%20%2F%2F%20Error%0D%0A%7D)\r\n\r\n**Result:**\r\n\r\n```ts\r\ndeclare module Example {\r\n    enum Test {\r\n        a = '1',\r\n        b = '2',\r\n        c = '3'\r\n    }\r\n\r\n    export const a = 'string';\r\n    export const b = `template`; // OK\r\n\r\n    export const c = Test.a;\r\n    export const d = Test['b'];\r\n    export const e = Test[`c`]; // OK\r\n}\r\n```\r\n\r\n**Related functions:**\r\n\r\n1. `isStringOrNumberLiteralExpression` (in `checker.ts`)\r\n\r\n<!-- ---------------------- -->\r\n\r\n### 5. Support template literals in control flow checks\r\n\r\n[Example](http://www.typescriptlang.org/play/index.html#src=type%20T1%20%3D%20%7B%20kind%3A%20'A'%2C%20a%3A%20number%20%7D%3B%0D%0Atype%20T2%20%3D%20%7B%20kind%3A%20'B'%2C%20b%3A%20string%20%7D%3B%0D%0Atype%20TUnion%20%3D%20T1%20%7C%20T2%3B%0D%0A%0D%0Afunction%20verifyNever(val%3A%20never)%3A%20never%20%7B%0D%0A%20%20%20%20throw%20new%20Error(%60Unexpected%20value%3A%20%24%7Bval%7D%60)%3B%0D%0A%7D%0D%0A%0D%0Afunction%20Example1(val%3A%20TUnion)%20%7B%0D%0A%20%20%20%20%2F%2F%20switch%20(val%5B'kind'%5D)%20%7B%0D%0A%20%20%20%20switch%20(val%5B%60kind%60%5D)%20%7B%0D%0A%20%20%20%20%20%20%20%20case%20'A'%3A%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20return%20val.a%3B%0D%0A%20%20%20%20%20%20%20%20case%20'B'%3A%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20return%20val.b%3B%0D%0A%20%20%20%20%20%20%20%20default%3A%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20return%20verifyNever(val)%3B%0D%0A%20%20%20%20%7D%0D%0A%7D%0D%0A%0D%0Afunction%20Example2(val%3A%20TUnion)%20%7B%0D%0A%20%20%20%20%2F%2F%20if%20(val%5B'kind'%5D%20%3D%3D%3D%20'B')%20%7B%0D%0A%20%20%20%20if%20(val%5B%60kind%60%5D%20%3D%3D%3D%20'B')%20%7B%0D%0A%20%20%20%20%20%20%20%20return%20val.b%3B%0D%0A%20%20%20%20%7D%20else%20%7B%0D%0A%20%20%20%20%20%20%20%20return%20val.a%3B%0D%0A%20%20%20%20%7D%0D%0A%7D%0D%0A)\r\n\r\n**Result:**\r\n\r\n```ts\r\ntype T1 = { kind: 'A', a: number };\r\ntype T2 = { kind: 'B', b: string };\r\ntype TUnion = T1 | T2;\r\n\r\nfunction verifyNever(val: never): never {\r\n    throw new Error(`Unexpected value: ${val}`);\r\n}\r\n\r\nfunction Example1(val: TUnion) {\r\n    switch (val[`kind`]) {\r\n        case 'A':\r\n            return val.a; // OK, val: T1\r\n        case 'B':\r\n            return val.b; // OK, val: T2\r\n        default:\r\n            return verifyNever(val); // OK, val: never\r\n    }\r\n}\r\n\r\nfunction Example2(val: TUnion) {\r\n    if (val[`kind`] === 'B') {\r\n        return val.b; // OK, val: T2\r\n    } else {\r\n        return val.a; // OK, val: T1\r\n    }\r\n}\r\n```\r\n\r\n**Related functions:**\r\n\r\n1. `getAccessedPropertyName` (in `checker.ts`)\r\n1. `isNarrowableReference` (in `binder.ts`)\r\n\r\n\r\n<!-- ---------------------- -->\r\n\r\n### 6. Unify symbols for computed properties\r\n\r\nI've noticed difference only in generated symbols for computed properties, that will produce similar list of symbols as regular string literals.\r\n\r\n**Result:**\r\n\r\n```diff\r\nclass C {\r\n>C : Symbol(C, Decl(computedPropertyNames13_ES6.ts, 2, 11))\r\n\r\n    static [\"\"]() { }\r\n>[\"\"] : Symbol(C[\"\"], Decl(computedPropertyNames13_ES6.ts, 8, 14))\r\n>\"\" : Symbol(C[\"\"], Decl(computedPropertyNames13_ES6.ts, 8, 14))\r\n\r\n    [`hello bye`]() { }\r\n>[`hello bye`] : Symbol(C[`hello bye`], Decl(computedPropertyNames13_ES6.ts, 12, 28))\r\n+>`hello bye` : Symbol(C[`hello bye`], Decl(computedPropertyNames13_ES6.ts, 12, 28))\r\n}\r\n\r\n```\r\n\r\n**Related functions:**\r\n\r\n1. `isLiteralComputedPropertyDeclarationName` (in `utilities.ts`)\r\n\r\n<!-- ---------------------- -->\r\n\r\n### 7. Unify `isExpressionNode` checks\r\n\r\nWhile both `StringLiteral` and `NoSubstitutionTemplateLiteral` kinds are checked inside this function - later one is always considered as expression.\r\nUnified checks will remove additional type(?) line and make output similar to regular strings.\r\n\r\n**Result:**\r\n\r\n```diff\r\nconst x: `foo` = \"foo\";\r\n>x : \"foo\"\r\n->`foo` : \"foo\"\r\n>\"foo\" : \"foo\"\r\n\r\n```\r\n\r\nWhich will be similar to\r\n\r\n```\r\nconst y: 'bar' = \"bar\";\r\n>y : \"bar\"\r\n>\"bar\" : \"bar\"\r\n```\r\n\r\n\r\n**Related functions:**\r\n\r\n1. `isExpressionNode` (in `utilities.ts`)\r\n\r\n<!-- ---------------------- -->\r\n\r\n### 8. Optional suggestion: Support template literals in ``let a: import(`test`)`` and ``import b = require(`test`)``\r\n\r\nThese are two cases when TS correctly builds AST and can support template literals without updates to parser (see \"Out of scope\" section with examples of unexpected AST).\r\n\r\n[Example](http://www.typescriptlang.org/play/index.html#src=let%20a%3A%20import(%60test%60)%3B%20%2F%2F%20Error%3A%20String%20literal%20expected.%0D%0Aimport%20b%20%3D%20require(%60test%60)%3B%20%20%2F%2F%20Error%3A%20String%20literal%20expected.)\r\n\r\n**Result:**\r\n\r\n```ts\r\nlet a: import(`test`); // OK\r\nimport b = require(`test`);  // OK\r\n```\r\n\r\n**Related functions:**\r\n\r\n1. `isLiteralImportTypeNode` (in `utilities.ts`)\r\n1. `tryGetImportFromModuleSpecifier` (in `utilities.ts`)\r\n1. `checkExternalImportOrExportDeclaration` (in `checker.ts`)\r\n1. `getExternalModuleFileFromDeclaration` (in `checker.ts`)\r\n\r\n\r\n<!-- ---------------------- -->\r\n\r\n### Out of scope\r\n\r\nSupporting template literals in import statements. Related issue: #29318\r\n\r\nTS has unexpected (at least for me) AST built for cases like\r\n\r\n```ts\r\ndeclare module `*.tpl` {}\r\n\r\nlet a: Promise<`test`>;\r\n```\r\nRelated issue: #29331\r\n\r\nI would like to leave these cases out of scope for new PR because these changes are not in checker level.\r\n\r\n\r\n## Few implementation questions\r\n\r\n1. What would be preferred way to check kind of node. `isStringLiteralLike` or `(node.kind === SyntaxKind.StringLiteral || node.kind === SyntaxKind.NoSubstitutionTemplateLiteral)`? Later won't look great in long `&&` or `||` expressions.\r\n1. Is it possible to update text of existing error message (if it is used only in one place that will be updated) or I should create new message and existing one will be abandoned?\r\n\r\n## Checklist\r\n\r\nMy suggestion meets these guidelines:\r\n\r\n* [X] This wouldn't be a breaking change in existing TypeScript/JavaScript code\r\n* [X] This wouldn't change the runtime behavior of existing JavaScript code\r\n* [X] This could be implemented without emitting different JS based on the types of the expressions\r\n* [X] This isn't a runtime feature (e.g. library functionality, non-ECMAScript syntax with JavaScript output, etc.)\r\n* [X] This feature would agree with the rest of [TypeScript's Design Goals](https://github.com/Microsoft/TypeScript/wiki/TypeScript-Design-Goals).\r\n\r\n",
			"score": 21.702755
		},
		{
			"url": "https://api.github.com/repos/microsoft/TypeScript/issues/32347",
			"repository_url": "https://api.github.com/repos/microsoft/TypeScript",
			"labels_url": "https://api.github.com/repos/microsoft/TypeScript/issues/32347/labels{/name}",
			"comments_url": "https://api.github.com/repos/microsoft/TypeScript/issues/32347/comments",
			"events_url": "https://api.github.com/repos/microsoft/TypeScript/issues/32347/events",
			"html_url": "https://github.com/microsoft/TypeScript/issues/32347",
			"id": 466937653,
			"node_id": "MDU6SXNzdWU0NjY5Mzc2NTM=",
			"number": 32347,
			"title": "unknown should be narrowable to {}",
			"user": {
				"login": "evmar",
				"id": 3847,
				"node_id": "MDQ6VXNlcjM4NDc=",
				"avatar_url": "https://avatars3.githubusercontent.com/u/3847?v=4",
				"gravatar_id": "",
				"url": "https://api.github.com/users/evmar",
				"html_url": "https://github.com/evmar",
				"followers_url": "https://api.github.com/users/evmar/followers",
				"following_url": "https://api.github.com/users/evmar/following{/other_user}",
				"gists_url": "https://api.github.com/users/evmar/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/evmar/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/evmar/subscriptions",
				"organizations_url": "https://api.github.com/users/evmar/orgs",
				"repos_url": "https://api.github.com/users/evmar/repos",
				"events_url": "https://api.github.com/users/evmar/events{/privacy}",
				"received_events_url": "https://api.github.com/users/evmar/received_events",
				"type": "User",
				"site_admin": false
			},
			"labels": [
				{
					"id": 373477802,
					"node_id": "MDU6TGFiZWwzNzM0Nzc4MDI=",
					"url": "https://api.github.com/repos/microsoft/TypeScript/labels/Awaiting%20More%20Feedback",
					"name": "Awaiting More Feedback",
					"color": "556677",
					"default": false
				},
				{
					"id": 113971155,
					"node_id": "MDU6TGFiZWwxMTM5NzExNTU=",
					"url": "https://api.github.com/repos/microsoft/TypeScript/labels/Suggestion",
					"name": "Suggestion",
					"color": "006b75",
					"default": false
				}
			],
			"state": "open",
			"locked": false,
			"assignee": null,
			"assignees": [],
			"milestone": null,
			"comments": 0,
			"created_at": "2019-07-11T14:45:06Z",
			"updated_at": "2019-07-31T14:50:06Z",
			"closed_at": null,
			"author_association": "CONTRIBUTOR",
			"body": "**TypeScript Version:**  3.6.0-dev.20190711\r\n\r\n**Search Terms:** unknown narrow toString hasOwnProperty\r\n\r\n**Code**\r\n\r\n```ts\r\nfunction f1(o: unknown) {\r\n  if (o) {\r\n    o.toString();\r\n  }\r\n}\r\nfunction f2(o: {}|null|undefined) {\r\n  if (o) {\r\n    o.toString();\r\n  }\r\n}\r\n```\r\n\r\n**Expected behavior:**\r\nBoth succeed.\r\n\r\nFrom user perspective I believe unknown behaves like an alias for the second type.  So another way of looking at this problem is that given f1's signature, it's hard to explain why to someone to need to switch it to f2's signature based on whether the body needs narrowing.\r\n\r\n**Actual behavior:**\r\nf1 invalid on the toString, Object is of type 'unknown'.\r\n\r\n**Playground Link:** \r\nhttp://www.typescriptlang.org/play/#code/GYVwdgxgLglg9mABMAjACjgLkeA1mOAdzAEpEBvAKEURmEQzKpprgDoo4BlKAJxjABzNCQDc1RAF9K00JFgJkAJgzZykgD5gQAGx0bwAEwCmwAccNMJdBnCstE7Tj35CR4mtMlA\r\n\r\n**Related Issues:**\r\nIn this comment\r\nhttps://github.com/microsoft/TypeScript/issues/28131#issuecomment-433106959\r\n@ahejlsberg says it's a limitation of the CFA.\r\n\r\nThis bug talks about other approaches to narrowing unknown:\r\nhttps://github.com/microsoft/TypeScript/issues/25720\r\nand in particular @andy-ms points out a bug that feels similar:\r\nhttps://github.com/microsoft/TypeScript/issues/25720#issuecomment-407237691",
			"score": 21.69898
		},
		{
			"url": "https://api.github.com/repos/microsoft/TypeScript/issues/19508",
			"repository_url": "https://api.github.com/repos/microsoft/TypeScript",
			"labels_url": "https://api.github.com/repos/microsoft/TypeScript/issues/19508/labels{/name}",
			"comments_url": "https://api.github.com/repos/microsoft/TypeScript/issues/19508/comments",
			"events_url": "https://api.github.com/repos/microsoft/TypeScript/issues/19508/events",
			"html_url": "https://github.com/microsoft/TypeScript/issues/19508",
			"id": 268910864,
			"node_id": "MDU6SXNzdWUyNjg5MTA4NjQ=",
			"number": 19508,
			"title": "Array of functions return types not combined",
			"user": {
				"login": "tsu-complete",
				"id": 12189295,
				"node_id": "MDQ6VXNlcjEyMTg5Mjk1",
				"avatar_url": "https://avatars2.githubusercontent.com/u/12189295?v=4",
				"gravatar_id": "",
				"url": "https://api.github.com/users/tsu-complete",
				"html_url": "https://github.com/tsu-complete",
				"followers_url": "https://api.github.com/users/tsu-complete/followers",
				"following_url": "https://api.github.com/users/tsu-complete/following{/other_user}",
				"gists_url": "https://api.github.com/users/tsu-complete/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/tsu-complete/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/tsu-complete/subscriptions",
				"organizations_url": "https://api.github.com/users/tsu-complete/orgs",
				"repos_url": "https://api.github.com/users/tsu-complete/repos",
				"events_url": "https://api.github.com/users/tsu-complete/events{/privacy}",
				"received_events_url": "https://api.github.com/users/tsu-complete/received_events",
				"type": "User",
				"site_admin": false
			},
			"labels": [
				{
					"id": 113971304,
					"node_id": "MDU6TGFiZWwxMTM5NzEzMDQ=",
					"url": "https://api.github.com/repos/microsoft/TypeScript/labels/Needs%20More%20Info",
					"name": "Needs More Info",
					"color": "556b75",
					"default": false
				}
			],
			"state": "open",
			"locked": false,
			"assignee": null,
			"assignees": [],
			"milestone": null,
			"comments": 2,
			"created_at": "2017-10-26T21:04:53Z",
			"updated_at": "2018-08-22T20:40:44Z",
			"closed_at": null,
			"author_association": "NONE",
			"body": "<!-- BUGS: Please use this template. -->\r\n<!-- QUESTIONS: This is not a general support forum! Ask Qs at http://stackoverflow.com/questions/tagged/typescript -->\r\n<!-- SUGGESTIONS: See https://github.com/Microsoft/TypeScript-wiki/blob/master/Writing-Good-Design-Proposals.md -->\r\n\r\n<!-- Please try to reproduce the issue with `typescript@next`. It may have already been fixed. -->\r\n**TypeScript Version:**  2.5.3\r\n\r\n**Code**\r\n\r\n```ts\r\n// This code compiles successfully\r\nfunction test_direct <A> (args: Iterable<A>): Array<A> {\r\n  return Array.slice.call(args);\r\n}\r\nfunction test_fn <A> (args: Iterable<( ) => A>): Array<A> {\r\n  return Array.slice.call(args).map(invoke);\r\n}\r\n```\r\n\r\n**Expected behavior:**\r\n\r\n```ts\r\n// Compiles, type is Array<number|string>\r\ntest_direct([1, \"1\"]);\r\n\r\n// Compiles, type is Array<number,string>\r\ntest_fn([( ): number => 1, ( ): string => \"1\"]);\r\n```\r\n\r\n**Actual behavior:**\r\n\r\n```ts\r\n// Fails, `((()=>number) | (()=>string))[]` is not assignable to parameter of type `Iterable<() => number`\r\n// Looks like it only takes the first, and expects the rest to be the same\r\ntest_fn([( ): number => 1, ( ): string => \"1\"]); \r\n\r\n// Confirmed as this works\r\ntest_fn([( ): number => 1, ( ): number => 2]); \r\n// And so does this (which is possible to circumvent the problem but needlessly verbose)\r\ntest_fn<number|string>([( ): number => 1, ( ): string => \"1\"]);\r\n```",
			"score": 21.693642
		}
	]
}
